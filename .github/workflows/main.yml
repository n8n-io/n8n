name: "Build and Push n8n (AMD64, ghcr.io)"

on:
  workflow_dispatch:   # اجرای دستی از طریق UI یا API

jobs:
  build-and-push:
    name: "Build & Push image"
    runs-on: ubuntu-latest

    steps:
      # 1) دریافت سورس
      - name: "Checkout repository"
        uses: actions/checkout@v4

      # 2) نصب Node 22 و فعال‌سازی cache pnpm
      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      # 3) نصب pnpm با اکشن رسمی
      - name: "Setup PNPM (action)"
        uses: pnpm/action-setup@v2
        with:
          version: 9          # نسخهٔ دلخواهِ پایدار
          run_install: false  # نصب وابستگی انجام نمی‌دهد

      # 3.5) fallback اگر به هر دلیل در PATH نبود
      - name: "Fallback: install pnpm globally"
        run: npm install -g pnpm@9

      # 4) نصب وابستگی‌ها
      - name: "Install dependencies"
        run: pnpm install --frozen-lockfile

      # 5) بیلد n8n → ./compiled
      - name: "Build n8n"
        run: pnpm run build

      # 6) بررسی وجود compiled (اختیاری)
      - name: "Verify compiled folder"
        run: ls -R compiled

      # 7) لاگین به GHCR
      - name: "Log in to GHCR"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 8) ذخیرهٔ تگ تاریخ روز (YYYY-MM-DD)
      - name: "Set image tag"
        id: vars
        run: echo "IMAGE_TAG=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"

      # 9) Build و Push ایمیج
      - name: "Build & Push Docker image"
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/images/n8n/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/n8n:${{ env.IMAGE_TAG }}
