name: Build & Push n8n (AMD64, ghcr.io, date-tag)

on:
  workflow_dispatch:   # اجرای دستی

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1) دریافت سورس
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) نصب Node (نسخه‌ی سازگار با n8n)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22   # مطابق engines پروژه
          cache: 'pnpm'

      # 3) نصب pnpm با اکشن رسمی
      - name: Setup PNPM
        uses: pnpm/action-setup@v2          # ← نسخهٔ پایدار
        with:
          version: 9                        # یا هر نسخهٔ پایدار مدنظرتان
          run_install: false

      # 3.5) fallback اگر به هر دلیل باینری در PATH نبود
      - name: Fallback: install pnpm globally
        run: npm install -g pnpm@9

      # 4) نصب وابستگی‌ها
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 5) بیلد n8n → خروجی در ./compiled
      - name: Build n8n
        run: pnpm run build

      # 6) اطمینان از وجود compiled (اختیاری ولی مفید برای دیباگ)
      - name: Verify compiled folder
        run: |
          echo "Contents of ./compiled:"
          ls -R compiled

      # 7) لاگین به GHCR با توکن داخلی گیت‌هاب
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 8) تنظیم متغیر تگ تاریخ روز
      - name: Set image tag
        id: date
        run: echo "TAG=$(date +'%Y-%m-%d')" >> "$GITHUB_ENV"

      # 9) Build و Push ایمیج
      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .                                 # ریشهٔ مخزن
          file: ./docker/images/n8n/Dockerfile       # Dockerfile رسمی n8n
          platforms: linux/amd64                     # فقط AMD64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/n8n:${{ env.TAG }}
