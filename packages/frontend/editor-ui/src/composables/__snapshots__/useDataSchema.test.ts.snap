// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`useFlattenSchema > flattenMultipleSchemas > should flatten node schemas 1`] = `
[
  {
    "collapsable": true,
    "id": "Test Node",
    "info": undefined,
    "itemCount": [MockFunction spy],
    "nodeType": [MockFunction spy],
    "preview": false,
    "title": "Test Node",
    "type": "header",
  },
  {
    "collapsable": true,
    "depth": [MockFunction spy],
    "expression": "{{ $('Test Node').item.json }}",
    "icon": "cube",
    "id": "Test Node-{{ $('Test Node').item.json }}",
    "level": 0,
    "nodeName": "Test Node",
    "nodeType": [MockFunction spy],
    "path": "",
    "preview": false,
    "title": [MockFunction spy],
    "type": "item",
  },
  {
    "collapsable": true,
    "depth": [MockFunction spy],
    "expression": "{{ $('Test Node').item.json.obj }}",
    "icon": "cube",
    "id": "Test Node-{{ $('Test Node').item.json.obj }}",
    "level": 1,
    "nodeName": "Test Node",
    "nodeType": [MockFunction spy],
    "path": ".obj",
    "preview": false,
    "title": "obj",
    "type": "item",
  },
  {
    "collapsable": true,
    "depth": [MockFunction spy],
    "expression": "{{ $('Test Node').item.json.obj.foo }}",
    "icon": "cube",
    "id": "Test Node-{{ $('Test Node').item.json.obj.foo }}",
    "level": 2,
    "nodeName": "Test Node",
    "nodeType": [MockFunction spy],
    "path": ".obj.foo",
    "preview": false,
    "title": "foo",
    "type": "item",
  },
  {
    "collapsable": false,
    "depth": [MockFunction spy],
    "expression": "{{ $('Test Node').item.json.obj.foo.nested }}",
    "icon": "font",
    "id": "Test Node-{{ $('Test Node').item.json.obj.foo.nested }}",
    "level": 3,
    "nodeName": "Test Node",
    "nodeType": [MockFunction spy],
    "path": ".obj.foo.nested",
    "preview": false,
    "title": "nested",
    "type": "item",
    "value": "bar",
  },
  {
    "collapsable": true,
    "id": "Test Node",
    "info": undefined,
    "itemCount": [MockFunction spy],
    "nodeType": [MockFunction spy],
    "preview": false,
    "title": "Test Node",
    "type": "header",
  },
  {
    "collapsable": true,
    "depth": [MockFunction spy],
    "expression": "{{ $('Test Node').item.json }}",
    "icon": "cube",
    "id": "Test Node-{{ $('Test Node').item.json }}",
    "level": 0,
    "nodeName": "Test Node",
    "nodeType": [MockFunction spy],
    "path": "",
    "preview": false,
    "title": [MockFunction spy],
    "type": "item",
  },
  {
    "collapsable": true,
    "depth": [MockFunction spy],
    "expression": "{{ $('Test Node').item.json.obj }}",
    "icon": "cube",
    "id": "Test Node-{{ $('Test Node').item.json.obj }}",
    "level": 1,
    "nodeName": "Test Node",
    "nodeType": [MockFunction spy],
    "path": ".obj",
    "preview": false,
    "title": "obj",
    "type": "item",
  },
  {
    "collapsable": true,
    "depth": [MockFunction spy],
    "expression": "{{ $('Test Node').item.json.obj.foo }}",
    "icon": "cube",
    "id": "Test Node-{{ $('Test Node').item.json.obj.foo }}",
    "level": 2,
    "nodeName": "Test Node",
    "nodeType": [MockFunction spy],
    "path": ".obj.foo",
    "preview": false,
    "title": "foo",
    "type": "item",
  },
  {
    "collapsable": false,
    "depth": [MockFunction spy],
    "expression": "{{ $('Test Node').item.json.obj.foo.nested }}",
    "icon": "font",
    "id": "Test Node-{{ $('Test Node').item.json.obj.foo.nested }}",
    "level": 3,
    "nodeName": "Test Node",
    "nodeType": [MockFunction spy],
    "path": ".obj.foo.nested",
    "preview": false,
    "title": "nested",
    "type": "item",
    "value": "bar",
  },
]
`;
