{
	"name": "Voice assistant agent (with Telegram and Gcal)",
	"meta": {
		"templateCredsSetupCompleted": false,
		"templateId": "voice_assistant_agent_with_telegram_and_gcal"
	},
	"nodes": [
		{
			"parameters": {
				"updates": ["message"],
				"additionalFields": {
					"download": false,
					"userIds": "YOUR_USER_ID"
				}
			},
			"id": "0c402bdc-7fa2-4fa1-96d6-f02853cfdaa1",
			"name": "Telegram Message Trigger",
			"type": "n8n-nodes-base.telegramTrigger",
			"typeVersion": 1.2,
			"position": [-192, 0],
			"webhookId": "55acc711-c248-4ac9-b6cd-e295c2d33f4b",
			"credentials": {}
		},
		{
			"parameters": {
				"sessionIdType": "customKey",
				"sessionKey": "={{ $('Telegram Message Trigger').first().json.message.chat.id }}",
				"contextWindowLength": 10
			},
			"id": "30bef40d-efbe-4920-acad-ce9a42c0061c",
			"name": "Memory",
			"type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
			"typeVersion": 1.3,
			"position": [752, 288]
		},
		{
			"parameters": {
				"chatId": "={{ $('Telegram Message Trigger').first().json.message.chat.id }}",
				"text": "={{ $json.output }}",
				"additionalFields": {}
			},
			"type": "n8n-nodes-base.telegram",
			"typeVersion": 1.2,
			"position": [1056, 0],
			"id": "7dea5c17-bfdb-4874-918b-a6583298efa2",
			"name": "Reply in Telegram",
			"webhookId": "b96b7a41-9806-455f-b72e-00aa638eda71",
			"credentials": {}
		},
		{
			"parameters": {
				"resource": "file",
				"fileId": "={{ $json.message.voice.file_id }}",
				"additionalFields": {}
			},
			"type": "n8n-nodes-base.telegram",
			"typeVersion": 1.2,
			"position": [256, -96],
			"id": "66219c83-6371-4cc6-ad43-57cee44f52da",
			"name": "Get a file",
			"webhookId": "e0769871-efe3-49da-81a5-2f88a6fdd33f",
			"credentials": {}
		},
		{
			"parameters": {
				"conditions": {
					"options": {
						"caseSensitive": true,
						"leftValue": "",
						"typeValidation": "strict",
						"version": 2
					},
					"conditions": [
						{
							"id": "2b538077-d3d3-4713-b973-68748313ff97",
							"leftValue": "={{ $json.message.voice }}",
							"rightValue": "",
							"operator": {
								"type": "object",
								"operation": "notEmpty",
								"singleValue": true
							}
						}
					],
					"combinator": "and"
				},
				"options": {}
			},
			"type": "n8n-nodes-base.if",
			"typeVersion": 2.2,
			"position": [32, 0],
			"id": "3a1a7f7f-f122-438d-a0f2-1e80d1072dba",
			"name": "Check if Audio file"
		},
		{
			"parameters": {
				"resource": "audio",
				"operation": "transcribe",
				"options": {}
			},
			"type": "@n8n/n8n-nodes-langchain.openAi",
			"typeVersion": 1.8,
			"position": [480, -96],
			"id": "6f314aef-7ff1-4211-8656-e2c1f8fea374",
			"name": "Transcribe audio",
			"credentials": {}
		},
		{
			"parameters": {
				"assignments": {
					"assignments": [
						{
							"id": "eb912219-2436-4f04-8ffc-c1c20eb07344",
							"name": "text",
							"value": "={{ $json.message.text }}",
							"type": "string"
						}
					]
				},
				"options": {}
			},
			"type": "n8n-nodes-base.set",
			"typeVersion": 3.4,
			"position": [480, 96],
			"id": "2e9b0ca3-2a0f-441d-89a0-28365c5ba3ef",
			"name": "Set field"
		},
		{
			"parameters": {
				"operation": "getAll",
				"calendar": {
					"__rl": true,
					"value": "robert@n8n.io",
					"mode": "list",
					"cachedResultName": "robert@n8n.io"
				},
				"timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
				"timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
				"options": {}
			},
			"type": "n8n-nodes-base.googleCalendarTool",
			"typeVersion": 1.3,
			"position": [928, 288],
			"id": "a533f343-5bf8-48d7-bc35-b12072e32602",
			"name": "Get events",
			"credentials": {}
		},
		{
			"parameters": {
				"model": {
					"__rl": true,
					"value": "gpt-4.1-mini",
					"mode": "list",
					"cachedResultName": "gpt-4.1-mini"
				},
				"options": {}
			},
			"id": "61f3b0a0-210a-4eaa-91b5-e381d5f56754",
			"name": "Model",
			"type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
			"typeVersion": 1.2,
			"position": [624, 288],
			"credentials": {}
		},
		{
			"parameters": {
				"content": "### Voice assistant agent\nPersonal AI assistant in Telegram, handling both text and voice messages, and can access your Google Calendar.\n\n#### Set up\n- Configure credentials in the **Telegram**, **Model** and **Get events** nodes\n- Follow the bot creation steps in our [Telegram docs](https://docs.n8n.io/integrations/builtin/credentials/telegram/#supported-authentication-methods)\n- Add your user ID to the **Telegram Message Trigger** so only you can access it\n- Activate the workflow to recieve messages from Telegram\n- Send a message to the agent, e.g. What's in my calendar today?\n\n#### Next steps\nTry giving the agent more tools, so that it can draft emails and events for you from just a message.\n",
				"height": 496,
				"width": 304,
				"color": 5
			},
			"type": "n8n-nodes-base.stickyNote",
			"position": [-576, -80],
			"typeVersion": 1,
			"id": "a4a8f73c-f663-4ee6-b60e-d60722145726",
			"name": "Sticky Note"
		},
		{
			"parameters": {
				"promptType": "define",
				"text": "={{ $json.text || $json.message.text }}",
				"options": {
					"systemMessage": "=# Telegram Personal AI Assistant System Prompt\n\nYou are a helpful personal AI assistant that communicates with users through Telegram. You can handle both text and voice messages, and you have access to the user's email and calendar to provide comprehensive assistance.\n\n## Your Capabilities\n\nYou can help users with:\n- **General conversation** - Answer questions and provide information\n- **Email management** - Check and retrieve emails from their Gmail account\n- **Calendar assistance** - View upcoming events and schedule information\n- **Voice interaction** - Respond to transcribed voice messages naturally\n- **Personal productivity** - Help organize and manage daily tasks\n\n## Communication Style\n\n### Response Format\n- Keep responses conversational and friendly\n- Use appropriate length for Telegram (not too long)\n- Be helpful and informative\n- Match the user's tone and communication style\n\n### Voice Message Handling\n- When users send voice messages, respond naturally as if they spoke to you directly\n- Don't mention that their message was transcribed\n- Respond in a conversational way that flows naturally\n\n## Tool Usage Guidelines\n\n### Email Tool (Get emails)\n- Use when users ask about emails, messages, or communication\n- Can filter by date ranges when specified\n- Help users find specific emails or get summaries\n- Examples: \"Check my recent emails\", \"Any important messages today?\"\n\n### Calendar Tool (Get events)\n- Use when users ask about schedule, meetings, or appointments\n- Can check specific date ranges\n- Help with scheduling conflicts or availability\n- Examples: \"What's on my calendar today?\", \"Am I free tomorrow afternoon?\"\n\n## Context Awareness\n\n- Remember the current date and time: **Today is {{ $now.format('cccc') }} the {{ $now.format('yyyy-MM-dd HH:mm') }}**\n- Use this information to provide relevant, timely responses\n- Reference \"today\", \"tomorrow\", \"this week\" appropriately\n\n## User Interaction Examples\n\n### Email Queries\n**User**: \"Any important emails today?\"\n**You**: \"Let me check your recent emails...\" *[uses Get emails tool]*\n\n### Calendar Queries  \n**User**: \"What's my schedule like tomorrow?\"\n**You**: \"I'll check your calendar for tomorrow...\" *[uses Get events tool]*\n\n### General Assistance\n**User**: \"How's the weather?\"\n**You**: \"I don't have access to weather data, but you could check your local weather app or ask me to help with your emails or calendar instead!\"\n\n## Important Guidelines\n\n- Maintain conversation context using the memory system\n- Be proactive in offering help with emails and calendar\n- Ask clarifying questions when requests are ambiguous\n- Respect privacy - only access information when relevant to the request\n- If you can't help with something, suggest alternatives or redirect to your available capabilities\n\nRemember: You're a personal assistant, so be personable, helpful, and focused on making the user's day easier and more organized.\n\nToday is {{ $now.format('cccc') }} the {{ $now.format('yyyy-MM-dd HH:mm') }}."
				}
			},
			"id": "f958d2f6-6602-4443-bfae-ef628af09b84",
			"name": "Assistant Agent",
			"type": "@n8n/n8n-nodes-langchain.agent",
			"typeVersion": 2.2,
			"position": [704, 0]
		}
	],
	"pinData": {},
	"connections": {
		"Telegram Message Trigger": {
			"main": [
				[
					{
						"node": "Check if Audio file",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"Memory": {
			"ai_memory": [
				[
					{
						"node": "Assistant Agent",
						"type": "ai_memory",
						"index": 0
					}
				]
			]
		},
		"Get a file": {
			"main": [
				[
					{
						"node": "Transcribe audio",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"Check if Audio file": {
			"main": [
				[
					{
						"node": "Get a file",
						"type": "main",
						"index": 0
					}
				],
				[
					{
						"node": "Set field",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"Transcribe audio": {
			"main": [
				[
					{
						"node": "Assistant Agent",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"Set field": {
			"main": [
				[
					{
						"node": "Assistant Agent",
						"type": "main",
						"index": 0
					}
				]
			]
		},
		"Get events": {
			"ai_tool": [
				[
					{
						"node": "Assistant Agent",
						"type": "ai_tool",
						"index": 0
					}
				]
			]
		},
		"Model": {
			"ai_languageModel": [
				[
					{
						"node": "Assistant Agent",
						"type": "ai_languageModel",
						"index": 0
					}
				]
			]
		},
		"Assistant Agent": {
			"main": [
				[
					{
						"node": "Reply in Telegram",
						"type": "main",
						"index": 0
					}
				]
			]
		}
	},
	"active": false,
	"settings": {
		"executionOrder": "v1"
	},
	"tags": []
}
