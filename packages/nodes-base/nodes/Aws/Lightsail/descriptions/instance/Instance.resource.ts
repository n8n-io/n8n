import type { INodeProperties } from 'n8n-workflow';
export const instanceOperations: INodeProperties[] = [{displayName:'Operation',name:'operation',type:'options',noDataExpression:true,displayOptions:{show:{resource:['instance']}},options:[{name:'Create',value:'create',description:'Create instance',action:'Create instance',routing:{request:{method:'POST',headers:{'X-Amz-Target':'Lightsail_20161128.CreateInstances'}}}},{name:'Delete',value:'delete',description:'Delete instance',action:'Delete instance',routing:{request:{method:'POST',headers:{'X-Amz-Target':'Lightsail_20161128.DeleteInstance'}}}},{name:'Get',value:'get',description:'Get instance',action:'Get instance',routing:{request:{method:'POST',headers:{'X-Amz-Target':'Lightsail_20161128.GetInstance'}}}},{name:'Get Many',value:'getMany',description:'List instances',action:'Get many instances',routing:{request:{method:'POST',headers:{'X-Amz-Target':'Lightsail_20161128.GetInstances'}}}},{name:'Reboot',value:'reboot',description:'Reboot instance',action:'Reboot instance',routing:{request:{method:'POST',headers:{'X-Amz-Target':'Lightsail_20161128.RebootInstance'}}}},{name:'Start',value:'start',description:'Start instance',action:'Start instance',routing:{request:{method:'POST',headers:{'X-Amz-Target':'Lightsail_20161128.StartInstance'}}}},{name:'Stop',value:'stop',description:'Stop instance',action:'Stop instance',routing:{request:{method:'POST',headers:{'X-Amz-Target':'Lightsail_20161128.StopInstance'}}}}],default:'create'}];
export const instanceFields: INodeProperties[] = [{displayName:'Instance Name',name:'instanceNames',type:'string',required:true,displayOptions:{show:{resource:['instance']}},default:'',routing:{request:{body:{instanceNames:'={{ [$value] }}'}}},description:'Instance name'},{displayName:'Availability Zone',name:'availabilityZone',type:'string',required:true,displayOptions:{show:{resource:['instance'],operation:['create']}},default:'us-east-1a',routing:{request:{body:{availabilityZone:'={{ $value }}'}}},description:'Availability zone'},{displayName:'Blueprint ID',name:'blueprintId',type:'string',required:true,displayOptions:{show:{resource:['instance'],operation:['create']}},default:'wordpress',routing:{request:{body:{blueprintId:'={{ $value }}'}}},description:'Blueprint ID (e.g., wordpress, lamp_8, nodejs)'},{displayName:'Bundle ID',name:'bundleId',type:'string',required:true,displayOptions:{show:{resource:['instance'],operation:['create']}},default:'nano_2_0',routing:{request:{body:{bundleId:'={{ $value }}'}}},description:'Bundle ID (instance size)'}];
