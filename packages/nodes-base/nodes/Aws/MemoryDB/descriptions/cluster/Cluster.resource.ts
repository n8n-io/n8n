import type{INodeProperties}from'n8n-workflow';export const clusterOperations:INodeProperties[]=[{displayName:'Operation',name:'operation',type:'options',noDataExpression:true,displayOptions:{show:{resource:['cluster']}},options:[{name:'Create',value:'create',description:'Create cluster',action:'Create cluster',routing:{request:{method:'POST',headers:{'X-Amz-Target':'AmazonMemoryDB.CreateCluster'}}}},{name:'Delete',value:'delete',description:'Delete cluster',action:'Delete cluster',routing:{request:{method:'POST',headers:{'X-Amz-Target':'AmazonMemoryDB.DeleteCluster'}}}},{name:'Get',value:'get',description:'Get cluster',action:'Get cluster',routing:{request:{method:'POST',headers:{'X-Amz-Target':'AmazonMemoryDB.DescribeClusters'}}}},{name:'Get Many',value:'getMany',description:'List clusters',action:'Get many clusters',routing:{request:{method:'POST',headers:{'X-Amz-Target':'AmazonMemoryDB.DescribeClusters'}}}}],default:'create'}];export const clusterFields:INodeProperties[]=[{displayName:'Cluster Name',name:'ClusterName',type:'string',required:true,displayOptions:{show:{resource:['cluster']}},default:'',routing:{request:{body:{ClusterName:'={{$value}}'}}},description:'Cluster name'},{displayName:'Node Type',name:'NodeType',type:'string',required:true,displayOptions:{show:{resource:['cluster'],operation:['create']}},default:'db.r6g.large',routing:{request:{body:{NodeType:'={{$value}}'}}},description:'Node type (e.g., db.r6g.large)'},{displayName:'ACL Name',name:'ACLName',type:'string',required:true,displayOptions:{show:{resource:['cluster'],operation:['create']}},default:'open-access',routing:{request:{body:{ACLName:'={{$value}}'}}},description:'ACL name'}];
