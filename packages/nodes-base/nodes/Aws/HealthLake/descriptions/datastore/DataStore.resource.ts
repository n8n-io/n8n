import type{INodeProperties}from'n8n-workflow';export const dataStoreOperations:INodeProperties[]=[{displayName:'Operation',name:'operation',type:'options',noDataExpression:true,displayOptions:{show:{resource:['datastore']}},options:[{name:'Create',value:'create',description:'Create data store',action:'Create datastore',routing:{request:{method:'POST',headers:{'X-Amz-Target':'HealthLake.CreateFHIRDatastore'}}}},{name:'Delete',value:'delete',description:'Delete data store',action:'Delete datastore',routing:{request:{method:'POST',headers:{'X-Amz-Target':'HealthLake.DeleteFHIRDatastore'}}}},{name:'Get',value:'get',description:'Get data store',action:'Get datastore',routing:{request:{method:'POST',headers:{'X-Amz-Target':'HealthLake.DescribeFHIRDatastore'}}}},{name:'Get Many',value:'getMany',description:'List data stores',action:'Get many datastores',routing:{request:{method:'POST',headers:{'X-Amz-Target':'HealthLake.ListFHIRDatastores'}}}}],default:'create'}];export const dataStoreFields:INodeProperties[]=[{displayName:'Datastore ID',name:'DatastoreId',type:'string',required:true,displayOptions:{show:{resource:['datastore'],operation:['get','delete']}},default:'',routing:{request:{body:{DatastoreId:'={{$value}}'}}},description:'Datastore ID'},{displayName:'Datastore Name',name:'DatastoreName',type:'string',displayOptions:{show:{resource:['datastore'],operation:['create']}},default:'',routing:{request:{body:{DatastoreName:'={{$value}}'}}},description:'Datastore name'},{displayName:'Datastore Type',name:'DatastoreTypeVersion',type:'options',required:true,displayOptions:{show:{resource:['datastore'],operation:['create']}},options:[{name:'R4',value:'R4'}],default:'R4',routing:{request:{body:{DatastoreTypeVersion:'={{$value}}'}}},description:'FHIR version'}];
