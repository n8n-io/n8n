import type{INodeProperties}from'n8n-workflow';export const containerOperations:INodeProperties[]=[{displayName:'Operation',name:'operation',type:'options',noDataExpression:true,displayOptions:{show:{resource:['container']}},options:[{name:'Create',value:'create',description:'Create container',action:'Create container',routing:{request:{method:'POST',headers:{'X-Amz-Target':'MediaStore_20170901.CreateContainer'}}}},{name:'Delete',value:'delete',description:'Delete container',action:'Delete container',routing:{request:{method:'POST',headers:{'X-Amz-Target':'MediaStore_20170901.DeleteContainer'}}}},{name:'Get',value:'get',description:'Get container',action:'Get container',routing:{request:{method:'POST',headers:{'X-Amz-Target':'MediaStore_20170901.DescribeContainer'}}}},{name:'Get Many',value:'getMany',description:'List containers',action:'Get many containers',routing:{request:{method:'POST',headers:{'X-Amz-Target':'MediaStore_20170901.ListContainers'}}}}],default:'create'}];export const containerFields:INodeProperties[]=[{displayName:'Container Name',name:'ContainerName',type:'string',required:true,displayOptions:{show:{resource:['container']}},default:'',routing:{request:{body:{ContainerName:'={{$value}}'}}},description:'Container name'}];
