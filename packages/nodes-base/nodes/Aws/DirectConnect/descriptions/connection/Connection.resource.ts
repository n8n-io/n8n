import type { INodeProperties } from 'n8n-workflow';
export const connectionOperations: INodeProperties[] = [{displayName:'Operation',name:'operation',type:'options',noDataExpression:true,displayOptions:{show:{resource:['connection']}},options:[{name:'Create',value:'create',description:'Create connection',action:'Create connection',routing:{request:{method:'POST',headers:{'X-Amz-Target':'OvertureService.CreateConnection'}}}},{name:'Delete',value:'delete',description:'Delete connection',action:'Delete connection',routing:{request:{method:'POST',headers:{'X-Amz-Target':'OvertureService.DeleteConnection'}}}},{name:'Get',value:'get',description:'Get connection',action:'Get connection',routing:{request:{method:'POST',headers:{'X-Amz-Target':'OvertureService.DescribeConnections'}}}},{name:'Get Many',value:'getMany',description:'List connections',action:'Get many connections',routing:{request:{method:'POST',headers:{'X-Amz-Target':'OvertureService.DescribeConnections'}}}}],default:'create'}];
export const connectionFields: INodeProperties[] = [{displayName:'Connection ID',name:'connectionId',type:'string',required:true,displayOptions:{show:{resource:['connection'],operation:['delete','get']}},default:'',routing:{request:{body:{connectionId:'={{ $value }}'}}},description:'Connection ID'},{displayName:'Connection Name',name:'connectionName',type:'string',required:true,displayOptions:{show:{resource:['connection'],operation:['create']}},default:'',routing:{request:{body:{connectionName:'={{ $value }}'}}},description:'Connection name'},{displayName:'Location',name:'location',type:'string',required:true,displayOptions:{show:{resource:['connection'],operation:['create']}},default:'',routing:{request:{body:{location:'={{ $value }}'}}},description:'Location code'},{displayName:'Bandwidth',name:'bandwidth',type:'string',required:true,displayOptions:{show:{resource:['connection'],operation:['create']}},default:'1Gbps',routing:{request:{body:{bandwidth:'={{ $value }}'}}},description:'Bandwidth (e.g., 1Gbps, 10Gbps)'}];
