{
	"_reusableBaseText.cancel": "Cancel",
	"_reusableBaseText.codeNodeEditor.linter.useJson": "Access the properties of an item under `.json`, e.g. `item.json`",
	"_reusableBaseText.codeNodeEditor.completer.all": "Get all items",
	"_reusableBaseText.codeNodeEditor.completer.first": "Get the first item",
	"_reusableBaseText.codeNodeEditor.completer.last": "Get the last item",
	"_reusableBaseText.codeNodeEditor.completer.itemMatching": "Get the item matching a specified input item",
	"_reusableBaseText.name": "Name",
	"_reusableBaseText.save": "Save",
	"_reusableBaseText.dismiss": "Dismiss",
	"_reusableDynamicText.readMore": "Read more",
	"_reusableDynamicText.learnMore": "Learn more",
	"_reusableDynamicText.moreInfo": "More info",
	"_reusableDynamicText.oauth2.clientId": "Client ID",
	"_reusableDynamicText.oauth2.clientSecret": "Client Secret",
	"generic.learnMore": "Learn more",
	"generic.confirm": "Confirm",
	"generic.cancel": "Cancel",
	"generic.communityNode": "Community Node",
	"generic.communityNode.tooltip": "This is a node from our community. It's part of the {packageName} package. <a href=\"{docURL}\" target=\"_blank\" title=\"Read the n8n docs\">Learn more</a>",
	"generic.delete": "Delete",
	"generic.copy": "Copy",
	"generic.or": "or",
	"generic.clickToCopy": "Click to copy",
	"generic.copiedToClipboard": "Copied to clipboard",
	"generic.beta": "beta",
	"generic.yes": "Yes",
	"generic.no": "No",
	"generic.settings": "Settings",
	"generic.unsavedWork.confirmMessage.headline": "Save changes before leaving?",
	"generic.unsavedWork.confirmMessage.message": "If you don't save, you will lose your changes.",
	"generic.unsavedWork.confirmMessage.confirmButtonText": "Save",
	"generic.unsavedWork.confirmMessage.cancelButtonText": "Leave without saving",
	"about.aboutN8n": "About n8n",
	"about.close": "Close",
	"about.license": "License",
	"about.n8nLicense": "Sustainable Use License + n8n Enterprise License",
	"about.n8nVersion": "n8n Version",
	"about.sourceCode": "Source Code",
	"about.instanceID": "Instance ID",
	"activationModal.butYouCanSeeThem": "but you can see them in the",
	"activationModal.dontShowAgain": "Don't show again",
	"activationModal.executionList": "execution list",
	"activationModal.gotIt": "Got it",
	"activationModal.ifYouChooseTo": "if you choose to",
	"activationModal.saveExecutions": "save executions.",
	"activationModal.theseExecutionsWillNotShowUp": "These executions will not show up immediately in the editor,",
	"activationModal.workflowActivated": "Workflow activated",
	"activationModal.yourTriggerWillNowFire": "Your trigger will now fire production executions automatically.",
	"activationModal.yourTriggersWillNowFire": "Your triggers will now fire production executions automatically.",
	"activationModal.yourWorkflowWillNowListenForEvents": "Your workflow will now listen for events from {serviceName} and trigger executions.",
	"activationModal.yourWorkflowWillNowRegularlyCheck": "Your workflow will now regularly check {serviceName} for events and trigger executions for them.",
	"auth.changePassword": "Change Password",
	"auth.changePassword.currentPassword": "Current Password",
	"auth.changePassword.error": "Problem changing the password",
	"auth.changePassword.missingTokenError": "Missing token",
	"auth.changePassword.missingUserIdError": "Missing user ID",
	"auth.changePassword.passwordUpdated": "Password updated",
	"auth.changePassword.passwordUpdatedMessage": "You can now sign in with your new password",
	"auth.changePassword.passwordsMustMatchError": "Passwords must match",
	"auth.changePassword.reenterNewPassword": "Re-enter New Password",
	"auth.changePassword.tokenValidationError": "Issue validating invite token",
	"auth.defaultPasswordRequirements": "8+ characters, at least 1 number and 1 capital letter",
	"auth.email": "Email",
	"auth.firstName": "First Name",
	"auth.lastName": "Last Name",
	"auth.newPassword": "New Password",
	"auth.password": "Password",
	"auth.role": "Role",
	"auth.roles.member": "Member",
	"auth.roles.owner": "Owner",
	"auth.agreement.label": "I’d be OK sharing my opinion on n8n (no marketing emails though)",
	"auth.setup.confirmOwnerSetup": "Set up owner account?",
	"auth.setup.confirmOwnerSetupMessage": "To give others access to your <b>{entities}</b>, you’ll need to share these account details with them. Or you can continue as before with no account, by going back and skipping this setup. <a href=\"https://docs.n8n.io/reference/user-management.html\" target=\"_blank\">More info</a>",
	"auth.setup.createAccount": "Create account",
	"auth.setup.goBack": "Go back",
	"auth.setup.next": "Next",
	"auth.setup.ownerAccountBenefits": "Setting up an owner account allows you to invite others, and prevents people using n8n without an account",
	"auth.setup.settingUpOwnerError": "Problem setting up owner",
	"auth.setup.setupConfirmation.concatEntities": "{workflows} and {credentials}",
	"auth.setup.setupConfirmation.credentials": "{count} credential | {count} credentials",
	"auth.setup.setupConfirmation.existingWorkflows": "{count} existing workflow | {count} existing workflows",
	"auth.setup.setupOwner": "Set up owner account",
	"auth.setup.skipOwnerSetupQuestion": "Skip owner account setup?",
	"auth.setup.skipSetup": "Skip setup",
	"auth.setup.skipSetupTemporarily": "Skip setup for now",
	"auth.signin": "Sign in",
	"auth.signin.error": "Problem logging in",
	"auth.signout": "Sign out",
	"auth.signout.error": "Could not sign out",
	"auth.signup.finishAccountSetup": "Finish account setup",
	"auth.signup.missingTokenError": "Missing token",
	"auth.signup.setupYourAccount": "Set up your account",
	"auth.signup.setupYourAccountError": "Problem setting up your account",
	"auth.signup.tokenValidationError": "Issue validating invite token",
	"binaryDataDisplay.backToList": "Back to list",
	"binaryDataDisplay.backToOverviewPage": "Back to overview page",
	"binaryDataDisplay.noDataFoundToDisplay": "No data found to display",
	"binaryDataDisplay.yourBrowserDoesNotSupport": "Your browser does not support the video element. Kindly update it to latest version.",
	"codeEdit.edit": "Edit",
	"codeNodeEditor.completer.$()": "Output data of the {nodeName} node",
	"codeNodeEditor.completer.$execution": "Information about the current execution",
	"codeNodeEditor.completer.$execution.id": "The ID of the current execution",
	"codeNodeEditor.completer.$execution.mode": "How the execution was triggered: 'test' or 'production'",
	"codeNodeEditor.completer.$execution.resumeUrl": "Used when using the 'wait' node to wait for a webhook. The webhook to call to resume execution",
	"codeNodeEditor.completer.$input": "This node’s input data",
	"codeNodeEditor.completer.$input.all": "@:_reusableBaseText.codeNodeEditor.completer.all",
	"codeNodeEditor.completer.$input.first": "@:_reusableBaseText.codeNodeEditor.completer.first",
	"codeNodeEditor.completer.$input.item": "The item that generated the current one",
	"codeNodeEditor.completer.$input.itemMatching": "@:_reusableBaseText.codeNodeEditor.completer.itemMatching",
	"codeNodeEditor.completer.$input.last": "@:_reusableBaseText.codeNodeEditor.completer.last",
	"codeNodeEditor.completer.$itemIndex": "The position of the current item in the list of items",
	"codeNodeEditor.completer.$jmespath": "Evaluate a JMESPath expression",
	"codeNodeEditor.completer.$now": "The current timestamp (as a Luxon object)",
	"codeNodeEditor.completer.$prevNode": "The node providing the input data for this run",
	"codeNodeEditor.completer.$prevNode.name": "The name of the node providing the input data for this run",
	"codeNodeEditor.completer.$prevNode.outputIndex": "The output connector of the node providing input data for this run",
	"codeNodeEditor.completer.$prevNode.runIndex": "The run of the node providing input data to the current one",
	"codeNodeEditor.completer.$runIndex": "The index of the current run of this node",
	"codeNodeEditor.completer.$today": "A timestamp representing the current day (at midnight, as a Luxon object)",
	"codeNodeEditor.completer.$workflow": "Information about the workflow",
	"codeNodeEditor.completer.$workflow.active": "Whether the workflow is active or not (boolean)",
	"codeNodeEditor.completer.$workflow.id": "The ID of the workflow",
	"codeNodeEditor.completer.$workflow.name": "The name of the workflow",
	"codeNodeEditor.completer.binary": "The item's binary (file) data",
	"codeNodeEditor.completer.json": "The item's JSON data. When in doubt, use this",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromFormat": "Create a DateTime from an input string and format string.",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromHTTP": "Create a DateTime from an HTTP header date",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromISO": "Create a DateTime from an ISO 8601 string",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromJSDate": "Create a DateTime from a JavaScript Date object. Uses the default zone",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromMillis": "Create a DateTime from a number of milliseconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromObject": "Create a DateTime from a JavaScript object with keys like 'year' and 'hour' with reasonable defaults",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromRFC2822": "Create a DateTime from an RFC 2822 string",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromSQL": "Create a DateTime from a SQL date, time, or datetime",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.fromSeconds": "Create a DateTime from a number of seconds since the epoch (meaning since 1 January 1970 00:00:00 UTC). Uses the default zone",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.invalid": "Create an invalid DateTime.",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.isDateTime": "Check if an object is a DateTime. Works across context boundaries",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.local": "Create a local DateTime",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.now": "Create a DateTime for the current instant, in the system's time zone",
	"codeNodeEditor.completer.luxon.dateTimeStaticMethods.utc": "Create a DateTime in UTC",
	"codeNodeEditor.completer.luxon.instanceMethods.day": "Get the day of the month (1-30ish).",
	"codeNodeEditor.completer.luxon.instanceMethods.daysInMonth": "Returns the number of days in this DateTime's month",
	"codeNodeEditor.completer.luxon.instanceMethods.daysInYear": "Returns the number of days in this DateTime's year",
	"codeNodeEditor.completer.luxon.instanceMethods.diff": "Return the difference between two DateTimes as a Duration.",
	"codeNodeEditor.completer.luxon.instanceMethods.diffNow": "Return the difference between this DateTime and right now.",
	"codeNodeEditor.completer.luxon.instanceMethods.endOf": "Set this DateTime to the end (meaning the last millisecond) of a unit of time",
	"codeNodeEditor.completer.luxon.instanceMethods.equals": "Equality check",
	"codeNodeEditor.completer.luxon.instanceMethods.hasSame": "Return whether this DateTime is in the same unit of time as another DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.hour": "Get the hour of the day (0-23).",
	"codeNodeEditor.completer.luxon.instanceMethods.invalidExplanation": "Returns an explanation of why this DateTime became invalid, or null if the DateTime is valid",
	"codeNodeEditor.completer.luxon.instanceMethods.invalidReason": "Returns an error code if this DateTime is invalid, or null if the DateTime is valid",
	"codeNodeEditor.completer.luxon.instanceMethods.isInDST": "Get whether the DateTime is in a DST.",
	"codeNodeEditor.completer.luxon.instanceMethods.isInLeapYear": "Returns true if this DateTime is in a leap year, false otherwise",
	"codeNodeEditor.completer.luxon.instanceMethods.isOffsetFixed": "Get whether this zone's offset ever changes, as in a DST.",
	"codeNodeEditor.completer.luxon.instanceMethods.isValid": "Returns whether the DateTime is valid. Invalid DateTimes occur when The DateTime was created from invalid calendar information, such as the 13th month or February 30. The DateTime was created by an operation on another invalid date.",
	"codeNodeEditor.completer.luxon.instanceMethods.locale": "Get the locale of a DateTime, such 'en-GB'. The locale is used when formatting the DateTime",
	"codeNodeEditor.completer.luxon.instanceMethods.max": "Return the max of several date times",
	"codeNodeEditor.completer.luxon.instanceMethods.millisecond": "Get the millisecond of the second (0-999).",
	"codeNodeEditor.completer.luxon.instanceMethods.min": "Return the min of several date times",
	"codeNodeEditor.completer.luxon.instanceMethods.minus": "Subtract hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds.",
	"codeNodeEditor.completer.luxon.instanceMethods.minute": "Get the minute of the hour (0-59).",
	"codeNodeEditor.completer.luxon.instanceMethods.month": "Get the month (1-12).",
	"codeNodeEditor.completer.luxon.instanceMethods.monthLong": "Get the human readable long month name, such as 'October'.",
	"codeNodeEditor.completer.luxon.instanceMethods.monthShort": "Get the human readable short month name, such as 'Oct'.",
	"codeNodeEditor.completer.luxon.instanceMethods.numberingSystem": "Get the numbering system of a DateTime, such 'beng'. The numbering system is used when formatting the DateTime",
	"codeNodeEditor.completer.luxon.instanceMethods.offset": "Get the UTC offset of this DateTime in minutes",
	"codeNodeEditor.completer.luxon.instanceMethods.offsetNameLong": "Get the long human name for the zone\\'s current offset, for example \"Eastern Standard Time\" or \" Eastern Daylight Time\".",
	"codeNodeEditor.completer.luxon.instanceMethods.offsetNameShort": "Get the short human name for the zone\\'s current offset, for example \"EST\" or \"EDT\".'",
	"codeNodeEditor.completer.luxon.instanceMethods.offsetNumber": "Get the short human name for the zone\\'s current offset, for example \"EST\" or \"EDT\".'",
	"codeNodeEditor.completer.luxon.instanceMethods.ordinal": "Get the ordinal (meaning the day of the year)",
	"codeNodeEditor.completer.luxon.instanceMethods.outputCalendar": "Get the output calendar of a DateTime, such 'islamic'. The output calendar is used when formatting the DateTime",
	"codeNodeEditor.completer.luxon.instanceMethods.plus": "Add hours, minutes, seconds, or milliseconds increases the timestamp by the right number of milliseconds.",
	"codeNodeEditor.completer.luxon.instanceMethods.quarter": "Get the quarter",
	"codeNodeEditor.completer.luxon.instanceMethods.second": "Get the second of the minute (0-59).",
	"codeNodeEditor.completer.luxon.instanceMethods.set": "Set the values of specified units. Returns a newly-constructed DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.setLocale": "Set the locale. Returns a newly-constructed DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.setZone": "Set the DateTime's zone to specified zone. Returns a newly-constructed DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.startOf": "Set this DateTime to the beginning of a unit of time.",
	"codeNodeEditor.completer.luxon.instanceMethods.toBSON": "Returns a BSON serializable equivalent to this DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.toFormat": "Returns a string representation of this DateTime formatted according to the specified format string.",
	"codeNodeEditor.completer.luxon.instanceMethods.toHTTP": "Returns a string representation of this DateTime appropriate for use in HTTP headers.",
	"codeNodeEditor.completer.luxon.instanceMethods.toISO": "Returns an ISO 8601-compliant string representation of this DateTime",
	"codeNodeEditor.completer.luxon.instanceMethods.toISODate": "Returns an ISO 8601-compliant string representation of this DateTime's date component",
	"codeNodeEditor.completer.luxon.instanceMethods.toISOTime": "Returns an ISO 8601-compliant string representation of this DateTime's time component",
	"codeNodeEditor.completer.luxon.instanceMethods.toISOWeekDate": "Returns an ISO 8601-compliant string representation of this DateTime's week date",
	"codeNodeEditor.completer.luxon.instanceMethods.toJSON": "Returns an ISO 8601 representation of this DateTime appropriate for use in JSON.",
	"codeNodeEditor.completer.luxon.instanceMethods.toJsDate": "Returns a JavaScript Date equivalent to this DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.toLocal": "Set the DateTime's zone to the host's local zone. Returns a newly-constructed DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.toLocaleParts": "Returns an array of format \"parts\", meaning individual tokens along with metadata.",
	"codeNodeEditor.completer.luxon.instanceMethods.toLocaleString": "Returns a localized string representing this date. Accepts the same options as the Intl.DateTimeFormat constructor and any presets defined by Luxon.",
	"codeNodeEditor.completer.luxon.instanceMethods.toMillis": "Returns the epoch milliseconds of this DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.toObject": "Returns a JavaScript object with this DateTime's year, month, day, and so on.",
	"codeNodeEditor.completer.luxon.instanceMethods.toRFC2822": "Returns an RFC 2822-compatible string representation of this DateTime, always in UTC",
	"codeNodeEditor.completer.luxon.instanceMethods.toRelative": "Returns a string representation of a this time relative to now, such as 'in two days'.",
	"codeNodeEditor.completer.luxon.instanceMethods.toRelativeCalendar": "Returns a string representation of this date relative to today, such as '\"'yesterday' or 'next month'",
	"codeNodeEditor.completer.luxon.instanceMethods.toSQL": "Returns a string representation of this DateTime appropriate for use in SQL DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.toSQLDate": "Returns a string representation of this DateTime appropriate for use in SQL Date",
	"codeNodeEditor.completer.luxon.instanceMethods.toSQLTime": "Returns a string representation of this DateTime appropriate for use in SQL Time",
	"codeNodeEditor.completer.luxon.instanceMethods.toSeconds": "Returns the epoch seconds of this DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.toString": "Returns a string representation of this DateTime appropriate for debugging",
	"codeNodeEditor.completer.luxon.instanceMethods.toUTC": "Set the DateTime's zone to UTC. Returns a newly-constructed DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.toUnixInteger": "Returns the epoch seconds (as a whole number) of this DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.until": "Return an Interval spanning between this DateTime and another DateTime",
	"codeNodeEditor.completer.luxon.instanceMethods.valueOf": "Returns the epoch milliseconds of this DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.weekNumber": "Get the week number of the week year (1-52ish).",
	"codeNodeEditor.completer.luxon.instanceMethods.weekYear": "Get the week year",
	"codeNodeEditor.completer.luxon.instanceMethods.weekday": "Get the day of the week. 1 is Monday and 7 is Sunday.",
	"codeNodeEditor.completer.luxon.instanceMethods.weekdayLong": "Get the human readable long weekday, such as 'Monday'.",
	"codeNodeEditor.completer.luxon.instanceMethods.weekdayShort": "Get the human readable short weekday, such as 'Mon'.",
	"codeNodeEditor.completer.luxon.instanceMethods.weeksInWeekYear": "Returns the number of weeks in this DateTime's year",
	"codeNodeEditor.completer.luxon.instanceMethods.year": "Get the year",
	"codeNodeEditor.completer.luxon.instanceMethods.zone": "Get the time zone associated with this DateTime.",
	"codeNodeEditor.completer.luxon.instanceMethods.zoneName": "Get the name of the time zone.",
	"codeNodeEditor.completer.selector.all": "@:_reusableBaseText.codeNodeEditor.completer.all",
	"codeNodeEditor.completer.selector.context": "Extra data about the node",
	"codeNodeEditor.completer.selector.first": "@:_reusableBaseText.codeNodeEditor.completer.first",
	"codeNodeEditor.completer.selector.item": "The item that generated the current one",
	"codeNodeEditor.completer.selector.itemMatching": "@:_reusableBaseText.codeNodeEditor.completer.itemMatching",
	"codeNodeEditor.completer.selector.last": "@:_reusableBaseText.codeNodeEditor.completer.last",
	"codeNodeEditor.completer.selector.params": "The parameters of the node",
	"codeNodeEditor.linter.allItems.firstOrLastCalledWithArg": "expects no argument.",
	"codeNodeEditor.linter.allItems.allCalledWithArg": "`.all()` expects no argument. To access a specific item, use bracket notation: `.all()[index]`.",
	"codeNodeEditor.linter.allItems.emptyReturn": "Code doesn't return items properly. Please return an array of objects, one for each item you would like to output.",
	"codeNodeEditor.linter.allItems.itemCall": "`item` is a property to access, not a method to call. Did you mean `.item` without brackets?",
	"codeNodeEditor.linter.allItems.itemMatchingNoArg": "`.itemMatching()` expects an item index to be passed in as its argument.",
	"codeNodeEditor.linter.allItems.unavailableProperty": "`.item` is only available in the 'Run Once for Each Item' mode.",
	"codeNodeEditor.linter.allItems.unavailableVar": "is only available in the 'Run Once for Each Item' mode.",
	"codeNodeEditor.linter.bothModes.directAccess.firstOrLastCall": "@:_reusableBaseText.codeNodeEditor.linter.useJson",
	"codeNodeEditor.linter.bothModes.directAccess.itemProperty": "@:_reusableBaseText.codeNodeEditor.linter.useJson",
	"codeNodeEditor.linter.bothModes.varDeclaration.itemProperty": "@:_reusableBaseText.codeNodeEditor.linter.useJson",
	"codeNodeEditor.linter.bothModes.varDeclaration.itemSubproperty": "@:_reusableBaseText.codeNodeEditor.linter.useJson",
	"codeNodeEditor.linter.eachItem.emptyReturn": "Code doesn't return an object. Please return an object representing the output item",
	"codeNodeEditor.linter.eachItem.legacyItemAccess": "`item` is not defined. Did you mean `$input.item.json`?",
	"codeNodeEditor.linter.eachItem.returnArray": "Code doesn't return an object. Array found instead. Please return an object representing the output item",
	"codeNodeEditor.linter.eachItem.unavailableMethod": "is only available in the 'Run Once for All Items' mode.",
	"codeNodeEditor.linter.bothModes.syntaxError": "Syntax error",
	"collectionParameter.choose": "Choose...",
	"collectionParameter.noProperties": "No properties",
	"credentialEdit.credentialConfig.accountConnected": "Account connected",
	"credentialEdit.credentialConfig.clickToCopy": "Click To Copy",
	"credentialEdit.credentialConfig.connectionTestedSuccessfully": "Connection tested successfully",
	"credentialEdit.credentialConfig.couldntConnectWithTheseSettings": "Couldn’t connect with these settings",
	"credentialEdit.credentialConfig.needHelpFillingOutTheseFields": "Need help filling out these fields?",
	"credentialEdit.credentialConfig.oAuthRedirectUrl": "OAuth Redirect URL",
	"credentialEdit.credentialConfig.openDocs": "Open docs",
	"credentialEdit.credentialConfig.pleaseCheckTheErrorsBelow": "Please check the errors below",
	"credentialEdit.credentialConfig.reconnect": "Reconnect",
	"credentialEdit.credentialConfig.reconnectOAuth2Credential": "Reconnect OAuth2 Credential",
	"credentialEdit.credentialConfig.redirectUrlCopiedToClipboard": "Redirect URL copied to clipboard",
	"credentialEdit.credentialConfig.retry": "Retry",
	"credentialEdit.credentialConfig.retryCredentialTest": "Retry credential test",
	"credentialEdit.credentialConfig.retrying": "Retrying",
	"credentialEdit.credentialConfig.subtitle": "In {appName}, use the URL above when prompted to enter an OAuth callback or redirect URL",
	"credentialEdit.credentialConfig.theServiceYouReConnectingTo": "the service you're connecting to",
	"credentialEdit.credentialConfig.missingCredentialType": "This credential's type isn't available. This usually happens when a previously installed community or custom node was uninstalled.",
	"credentialEdit.credentialEdit.confirmMessage.beforeClose1.cancelButtonText": "Keep Editing",
	"credentialEdit.credentialEdit.confirmMessage.beforeClose1.confirmButtonText": "Close",
	"credentialEdit.credentialEdit.confirmMessage.beforeClose1.headline": "Close without saving?",
	"credentialEdit.credentialEdit.confirmMessage.beforeClose1.message": "Are you sure you want to throw away the changes you made to the {credentialDisplayName} credential?",
	"credentialEdit.credentialEdit.confirmMessage.beforeClose2.cancelButtonText": "Keep Editing",
	"credentialEdit.credentialEdit.confirmMessage.beforeClose2.confirmButtonText": "Close",
	"credentialEdit.credentialEdit.confirmMessage.beforeClose2.headline": "Close without connecting?",
	"credentialEdit.credentialEdit.confirmMessage.beforeClose2.message": "You need to connect your credential for it to work",
	"credentialEdit.credentialEdit.confirmMessage.deleteCredential.cancelButtonText": "",
	"credentialEdit.credentialEdit.confirmMessage.deleteCredential.confirmButtonText": "Yes, delete",
	"credentialEdit.credentialEdit.confirmMessage.deleteCredential.headline": "Delete Credential?",
	"credentialEdit.credentialEdit.confirmMessage.deleteCredential.message": "Are you sure you want to delete \"{savedCredentialName}\"? This may break any workflows that use it.",
	"credentialEdit.credentialEdit.connection": "Connection",
	"credentialEdit.credentialEdit.sharing": "Sharing",
	"credentialEdit.credentialEdit.couldNotFindCredentialOfType": "Could not find credential of type",
	"credentialEdit.credentialEdit.couldNotFindCredentialWithId": "Could not find credential with ID",
	"credentialEdit.credentialEdit.delete": "Delete",
	"credentialEdit.credentialEdit.details": "Details",
	"credentialEdit.credentialEdit.saving": "Saving",
	"credentialEdit.credentialEdit.showError.createCredential.title": "Problem creating credential",
	"credentialEdit.credentialEdit.showError.deleteCredential.title": "Problem deleting credential",
	"credentialEdit.credentialEdit.showError.generateAuthorizationUrl.message": "There was a problem generating the authorization URL",
	"credentialEdit.credentialEdit.showError.generateAuthorizationUrl.title": "OAuth Authorization Error",
	"credentialEdit.credentialEdit.showError.loadCredential.title": "Problem loading credential",
	"credentialEdit.credentialEdit.showError.updateCredential.title": "Problem updating credential",
	"credentialEdit.credentialEdit.showMessage.title": "Credential deleted",
	"credentialEdit.credentialEdit.testing": "Testing",
	"credentialEdit.credentialEdit.info.sharee": "Only {credentialOwnerName} can edit this connection",
	"credentialEdit.credentialInfo.allowUseBy": "Allow use by",
	"credentialEdit.credentialInfo.created": "Created",
	"credentialEdit.credentialInfo.id": "ID",
	"credentialEdit.credentialInfo.lastModified": "Last modified",
	"credentialEdit.oAuthButton.connectMyAccount": "Connect my account",
	"credentialEdit.oAuthButton.signInWithGoogle": "Sign in with Google",
	"credentialEdit.credentialSharing.info.owner": "Sharing a credential allows people to use it in their workflows. They cannot access credential details.",
	"credentialEdit.credentialSharing.info.instanceOwner": "You have access to this credential because you’re the Instance Owner. You can view partial data, update the credential title, or delete the credential.",
	"credentialEdit.credentialSharing.info.sharee": "Only {credentialOwnerName} can change who this credential is shared with",
	"credentialEdit.credentialSharing.info.sharee.fallback": "the owner",
	"credentialEdit.credentialSharing.select.placeholder": "Add people",
	"credentialEdit.credentialSharing.list.delete": "Remove",
	"credentialEdit.credentialSharing.list.delete.confirm.title": "Remove access?",
	"credentialEdit.credentialSharing.list.delete.confirm.message": "This may break any workflows in which {name} has used this credential",
	"credentialEdit.credentialSharing.list.delete.confirm.confirmButtonText": "Remove",
	"credentialEdit.credentialSharing.list.delete.confirm.cancelButtonText": "Cancel",
	"credentialSelectModal.addNewCredential": "Add new credential",
	"credentialSelectModal.continue": "Continue",
	"credentialSelectModal.searchForApp": "Search for app...",
	"credentialSelectModal.selectAnAppOrServiceToConnectTo": "Select an app or service to connect to",
	"credentialsList.addNew": "Add New",
	"credentialsList.confirmMessage.cancelButtonText": "",
	"credentialsList.confirmMessage.confirmButtonText": "Yes, delete",
	"credentialsList.confirmMessage.headline": "Delete Credential?",
	"credentialsList.confirmMessage.message": "Are you sure you want to delete {credentialName}?",
	"credentialsList.createNewCredential": "Create New Credential",
	"credentialsList.created": "Created",
	"credentialsList.credentials": "Credentials",
	"credentialsList.deleteCredential": "Delete Credential",
	"credentialsList.editCredential": "Edit Credential",
	"credentialsList.errorLoadingCredentials": "Error loading credentials",
	"credentialsList.name": "@:_reusableBaseText.name",
	"credentialsList.operations": "Operations",
	"credentialsList.showError.deleteCredential.title": "Problem deleting credential",
	"credentialsList.showMessage.title": "Credential deleted",
	"credentialsList.type": "Type",
	"credentialsList.updated": "Updated",
	"credentialsList.yourSavedCredentials": "Your saved credentials",
	"credentials.heading": "Credentials",
	"credentials.add": "Add Credential",
	"credentials.empty.heading": "{name}, let's set up a credential",
	"credentials.empty.heading.userNotSetup": "Set up a credential",
	"credentials.empty.description": "Credentials let workflows interact with your apps and services",
	"credentials.empty.button": "Add first credential",
	"credentials.menu.my": "My credentials",
	"credentials.menu.all": "All credentials",
	"credentials.item.open": "Open",
	"credentials.item.delete": "Delete",
	"credentials.item.updated": "Last updated",
	"credentials.item.created": "Created",
	"credentials.item.owner": "Owner",
	"credentials.search.placeholder": "Search credentials...",
	"credentials.filters.type": "Type",
	"credentials.filters.active": "Some credentials may be hidden since filters are applied.",
	"credentials.filters.active.reset": "Remove filters",
	"credentials.sort.lastUpdated": "Sort by last updated",
	"credentials.sort.lastCreated": "Sort by last created",
	"credentials.sort.nameAsc": "Sort by name (A-Z)",
	"credentials.sort.nameDesc": "Sort by name (Z-A)",
	"credentials.noResults": "No credentials found",
	"credentials.noResults.withSearch.switchToShared.preamble": "some credentials may be",
	"credentials.noResults.withSearch.switchToShared.link": "hidden",
	"credentials.noResults.switchToShared.preamble": "but there are some",
	"credentials.noResults.switchToShared.link": "shared with you",
	"dataDisplay.needHelp": "Need help?",
	"dataDisplay.nodeDocumentation": "Node Documentation",
	"dataDisplay.openDocumentationFor": "Open {nodeTypeDisplayName} documentation",
	"dataMapping.dragColumnToFieldHint": "Drag onto a field to map column to that field",
	"dataMapping.dragFromPreviousHint": "Map data from previous nodes to <b>{name}</b> by first clicking this button",
	"dataMapping.success.title": "You just mapped some data!",
	"dataMapping.success.moreInfo": "Check out our <a href=\"https://docs.n8n.io/data/data-mapping\" target=\"_blank\">docs</a> for more details on mapping data in n8n",
	"dataMapping.tableHint": "<img src='/static/data-mapping-gif.gif'/> Drag a column onto <b>{name}</b> to map it",
	"dataMapping.jsonHint": "<img src='/static/json-mapping-gif.gif'/> Drag a JSON key onto <b>{name}</b> to map data",
	"dataMapping.mapKeyToField": "Map '{name}' to a field",
	"dataMapping.mapAllKeysToField": "Map every '{name}' to a field",
	"displayWithChange.cancelEdit": "Cancel Edit",
	"displayWithChange.clickToChange": "Click to Change",
	"displayWithChange.setValue": "Set Value",
	"duplicateWorkflowDialog.cancel": "@:_reusableBaseText.cancel",
	"duplicateWorkflowDialog.chooseOrCreateATag": "Choose or create a tag",
	"duplicateWorkflowDialog.duplicateWorkflow": "Duplicate Workflow",
	"duplicateWorkflowDialog.enterWorkflowName": "Enter workflow name",
	"duplicateWorkflowDialog.save": "@:_reusableBaseText.save",
	"duplicateWorkflowDialog.showMessage.message": "Please enter a name.",
	"duplicateWorkflowDialog.showMessage.title": "Name missing",
	"error": "Error",
	"error.goBack": "Go back",
	"error.pageNotFound": "Oops, couldn’t find that",
	"executionDetails.executionFailed": "Execution failed",
	"executionDetails.executionId": "Execution ID",
	"executionDetails.executionWaiting": "Execution waiting",
	"executionDetails.executionWasSuccessful": "Execution was successful",
	"executionDetails.of": "of",
	"executionDetails.openWorkflow": "Open Workflow",
	"executionDetails.readOnly.readOnly": "Read only",
	"executionDetails.readOnly.youreViewingTheLogOf": "You're viewing the log of a previous execution. You cannot<br />\n\t\tmake changes since this execution already occurred. Make changes<br />\n\t\tto this workflow by clicking on its name on the left.",
	"executionDetails.workflow": "workflow",
	"executionsList.allWorkflows": "All Workflows",
	"executionsList.anyStatus": "Any Status",
	"executionsList.autoRefresh": "Auto refresh",
	"executionsList.confirmMessage.cancelButtonText": "",
	"executionsList.confirmMessage.confirmButtonText": "Yes, delete",
	"executionsList.confirmMessage.headline": "Delete Executions?",
	"executionsList.confirmMessage.message": "Are you sure that you want to delete the {numSelected} selected execution(s)?",
	"executionsList.deleteSelected": "Delete Selected",
	"executionsList.error": "Error",
	"executionsList.filters": "Filters",
	"executionsList.loadMore": "Load More",
	"executionsList.mode": "Mode",
	"executionsList.modes.error": "error",
	"executionsList.modes.integrated": "integrated",
	"executionsList.modes.manual": "manual",
	"executionsList.modes.retry": "retry",
	"executionsList.modes.trigger": "trigger",
	"executionsList.modes.webhook": "webhook",
	"executionsList.name": "@:_reusableBaseText.name",
	"executionsList.openPastExecution": "Open Past Execution",
	"executionsList.retryExecution": "Retry execution",
	"executionsList.retryOf": "Retry of",
	"executionsList.retryWithCurrentlySavedWorkflow": "Retry with currently saved workflow (from node with error)",
	"executionsList.retryWithOriginalworkflow": "Retry with original workflow (from node with error)",
	"executionsList.running": "Running",
	"executionsList.runningTime": "Running Time",
	"executionsList.selectStatus": "Select Status",
	"executionsList.selectWorkflow": "Select Workflow",
	"executionsList.selected": "Selected",
	"executionsList.showError.handleDeleteSelected.title": "Problem deleting executions",
	"executionsList.showError.loadMore.title": "Problem loading executions",
	"executionsList.showError.loadWorkflows.title": "Problem loading workflows",
	"executionsList.showError.refreshData.title": "Problem loading data",
	"executionsList.showError.retryExecution.title": "Problem with retry",
	"executionsList.showError.stopExecution.title": "Problem stopping execution",
	"executionsList.showMessage.handleDeleteSelected.title": "Execution deleted",
	"executionsList.showMessage.retrySuccessfulFalse.title": "Retry unsuccessful",
	"executionsList.showMessage.retrySuccessfulTrue.title": "Retry successful",
	"executionsList.showMessage.stopExecution.message": "Execution ID {activeExecutionId}",
	"executionsList.showMessage.stopExecution.title": "Execution stopped",
	"executionsList.startedAtId": "Started At / ID",
	"executionsList.status": "Status",
	"executionsList.statusTooltipText.theWorkflowExecutionFailed": "The workflow execution failed.",
	"executionsList.statusTooltipText.theWorkflowExecutionFailedButTheRetryWasSuccessful": "The workflow execution failed but the retry {entryRetrySuccessId} was successful.",
	"executionsList.statusTooltipText.theWorkflowExecutionIsProbablyStillRunning": "The workflow execution is probably still running but it may have crashed and n8n cannot safely tell. ",
	"executionsList.statusTooltipText.theWorkflowExecutionWasARetryOfAndFailed": "The workflow execution was a retry of {entryRetryOf} and failed.<br />New retries have to be started from the original execution.",
	"executionsList.statusTooltipText.theWorkflowExecutionWasARetryOfAndItWasSuccessful": "The workflow execution was a retry of {entryRetryOf} and it was successful.",
	"executionsList.statusTooltipText.theWorkflowExecutionWasSuccessful": "The worklow execution was successful.",
	"executionsList.statusTooltipText.theWorkflowIsCurrentlyExecuting": "The worklow is currently executing.",
	"executionsList.statusTooltipText.theWorkflowIsWaitingIndefinitely": "The workflow is waiting indefinitely for an incoming webhook call.",
	"executionsList.statusTooltipText.theWorkflowIsWaitingTill": "The worklow is waiting till {waitDateDate} {waitDateTime}.",
	"executionsList.stopExecution": "Stop Execution",
	"executionsList.success": "Success",
	"executionsList.successRetry": "Success retry",
	"executionsList.unknown": "Unknown",
	"executionsList.unsavedWorkflow": "[UNSAVED WORKFLOW]",
	"executionsList.waiting": "Waiting",
	"executionsList.workflowExecutions": "Workflow Executions",
	"expressionEdit.editExpression": "Edit Expression",
	"expressionEdit.expression": "Expression",
	"expressionEdit.result": "Result",
	"expressionEdit.variableSelector": "Variable Selector",
	"fakeDoor.credentialEdit.sharing.name": "Sharing",
	"fakeDoor.credentialEdit.sharing.actionBox.title": "Sharing is only available on <a href=\"https://n8n.io/cloud/\" target=\"_blank\">n8n Cloud</a> right now",
	"fakeDoor.credentialEdit.sharing.actionBox.description": "We’re working on bringing it to this edition of n8n, as a paid feature. If you’d like to be the first to hear when it’s ready, join the list.",
	"fakeDoor.credentialEdit.sharing.actionBox.title.cloud.upgrade": "Upgrade to add users",
	"fakeDoor.credentialEdit.sharing.actionBox.description.cloud.upgrade": "Power and Pro plan users can create multiple user accounts and share credentials. (Sharing workflows is coming soon)",
	"fakeDoor.credentialEdit.sharing.actionBox.button.cloud.upgrade": "Upgrade",
	"fakeDoor.settings.environments.name": "Environments",
	"fakeDoor.settings.environments.infoText": "Environments allow you to use different settings and credentials in a workflow when you're building it vs when it's running in production",
	"fakeDoor.settings.environments.actionBox.title": "We’re working on environments (as a paid feature)",
	"fakeDoor.settings.environments.actionBox.title.cloud": "We’re working on this",
	"fakeDoor.settings.environments.actionBox.description": "If you'd like to be the first to hear when it's ready, join the list.",
	"fakeDoor.settings.logging.name": "Logging",
	"fakeDoor.settings.logging.infoText": "You can already write logs to a file or the console using environment variables. <a href=\"https://docs.n8n.io/hosting/logging/\" target=\"_blank\">More info</a>",
	"fakeDoor.settings.logging.actionBox.title": "We're working on advanced logging (as a paid feature)",
	"fakeDoor.settings.logging.actionBox.title.cloud": "We're working on advanced logging",
	"fakeDoor.settings.logging.actionBox.description": "This also includes audit logging. If you'd like to be the first to hear when it's ready, join the list.",
	"fakeDoor.settings.users.name": "Users",
	"fakeDoor.settings.users.actionBox.title": "Upgrade to add users",
	"fakeDoor.settings.users.actionBox.description": "Power and Pro plan users can create multiple user accounts and share credentials. (Sharing workflows is coming soon)",
	"fakeDoor.settings.users.actionBox.button": "Upgrade",
	"fakeDoor.actionBox.button.label": "Join the list",
	"fixedCollectionParameter.choose": "Choose...",
	"fixedCollectionParameter.currentlyNoItemsExist": "Currently no items exist",
	"fixedCollectionParameter.deleteItem": "Delete item",
	"fixedCollectionParameter.moveDown": "Move down",
	"fixedCollectionParameter.moveUp": "Move up",
	"forgotPassword": "Forgot my password",
	"forgotPassword.emailSentIfExists": "We’ve emailed {email} (if there’s a matching account)",
	"forgotPassword.getRecoveryLink": "Email me a recovery link",
	"forgotPassword.noSMTPToSendEmailWarning": "Please contact your admin. n8n isn’t set up to send email right now.",
	"forgotPassword.recoverPassword": "Recover password",
	"forgotPassword.recoveryEmailSent": "Recovery email sent",
	"forgotPassword.returnToSignIn": "Back to sign in",
	"forgotPassword.sendingEmailError": "Problem sending email",
	"forgotPassword.smtpErrorContactAdministrator": "Please contact your administrator (problem with your SMTP setup)",
	"forms.resourceFiltersDropdown.filters": "Filters",
	"forms.resourceFiltersDropdown.ownedBy": "Owned by",
	"forms.resourceFiltersDropdown.sharedWith": "Shared with",
	"forms.resourceFiltersDropdown.reset": "Reset all",
	"generic.oauth1Api": "OAuth1 API",
	"generic.oauth2Api": "OAuth2 API",
	"genericHelpers.loading": "Loading",
	"genericHelpers.min": "min",
	"genericHelpers.sec": "sec",
	"genericHelpers.showMessage.message": "This is a read-only version of the workflow. To make changes, either open the original workflow or save it under a new name.",
	"genericHelpers.showMessage.title": "Workflow cannot be changed",
	"mainSidebar.aboutN8n": "About n8n",
	"mainSidebar.confirmMessage.workflowDelete.cancelButtonText": "",
	"mainSidebar.confirmMessage.workflowDelete.confirmButtonText": "Yes, delete",
	"mainSidebar.confirmMessage.workflowDelete.headline": "Delete Workflow?",
	"mainSidebar.confirmMessage.workflowDelete.message": "Are you sure that you want to delete '{workflowName}'?",
	"mainSidebar.credentials": "Credentials",
	"mainSidebar.executions": "Executions",
	"mainSidebar.help": "Help",
	"mainSidebar.helpMenuItems.course": "Course",
	"mainSidebar.helpMenuItems.documentation": "Documentation",
	"mainSidebar.helpMenuItems.forum": "Forum",
	"mainSidebar.helpMenuItems.quickstart": "Quickstart",
	"mainSidebar.new": "New",
	"mainSidebar.newTemplate": "New from template",
	"mainSidebar.open": "Open",
	"mainSidebar.prompt.cancel": "@:_reusableBaseText.cancel",
	"mainSidebar.prompt.import": "Import",
	"mainSidebar.prompt.importWorkflowFromUrl": "Import Workflow from URL",
	"mainSidebar.prompt.invalidUrl": "Invalid URL",
	"mainSidebar.prompt.workflowUrl": "Workflow URL",
	"mainSidebar.save": "@:_reusableBaseText.save",
	"mainSidebar.showError.stopExecution.title": "Problem stopping execution",
	"mainSidebar.showMessage.handleFileImport.message": "The file does not contain valid JSON data",
	"mainSidebar.showMessage.handleFileImport.title": "Could not import file",
	"mainSidebar.showMessage.handleSelect1.title": "Workflow deleted",
	"mainSidebar.showMessage.handleSelect2.title": "Workflow created",
	"mainSidebar.showMessage.handleSelect3.title": "Workflow created",
	"mainSidebar.showMessage.stopExecution.title": "Execution stopped",
	"mainSidebar.templates": "Templates",
	"mainSidebar.workflows": "Workflows",
	"menuActions.duplicate": "Duplicate",
	"menuActions.download": "Download",
	"menuActions.importFromUrl": "Import from URL...",
	"menuActions.importFromFile": "Import from File...",
	"menuActions.delete": "Delete",
	"multipleParameter.addItem": "Add item",
	"multipleParameter.currentlyNoItemsExist": "Currently no items exist",
	"multipleParameter.deleteItem": "Delete item",
	"multipleParameter.moveDown": "Move down",
	"multipleParameter.moveUp": "Move up",
	"ndv.backToCanvas": "Back to canvas",
	"ndv.backToCanvas.waitingForTriggerWarning": "Waiting for a Trigger node to execute. Close this view to see the Workflow Canvas.",
	"ndv.execute.executeNode": "Execute node",
	"ndv.execute.executing": "Executing",
	"ndv.execute.fetchEvent": "Fetch Test Event",
	"ndv.execute.fixPrevious": "Fix previous node first",
	"ndv.execute.listenForEvent": "Listen For Event",
	"ndv.execute.listenForTestEvent": "Listen For Test Event",
	"ndv.execute.stopListening": "Stop Listening",
	"ndv.execute.nodeIsDisabled": "Enable node to execute",
	"ndv.execute.requiredFieldsMissing": "Complete required fields first",
	"ndv.execute.stopWaitingForWebhook.error": "Problem deleting test webhook",
	"ndv.execute.workflowAlreadyRunning": "Workflow is already running",
	"ndv.featureRequest": "I wish this node would...",
	"ndv.input": "Input",
	"ndv.input.nodeDistance": "({count} node back) | ({count} nodes back)",
	"ndv.input.noNodesFound": "No nodes found",
	"ndv.input.parentNodes": "Parent nodes",
	"ndv.input.tooMuchData.title": "Input data is huge",
	"ndv.input.noOutputDataInBranch": "No input data in this branch",
	"ndv.input.noOutputDataInNode": "Node did not output any data. n8n stops executing the workflow when a node has no output data.",
	"ndv.input.noOutputData": "No data",
	"ndv.input.noOutputData.executePrevious": "Execute previous nodes",
	"ndv.input.noOutputData.title": "No input data yet",
	"ndv.input.noOutputData.hint": "(From the earliest node that has no output data yet)",
	"ndv.input.executingPrevious": "Executing previous nodes...",
	"ndv.input.notConnected.title": "Wire me up",
	"ndv.input.notConnected.message": "This node can only receive input data if you connect it to another node.",
	"ndv.input.notConnected.learnMore": "Learn more",
	"ndv.input.disabled": "The '{nodeName}' node is disabled and won’t execute.",
	"ndv.input.disabled.cta": "Enable it",
	"ndv.output": "Output",
	"ndv.output.edit": "Edit Output",
	"ndv.output.all": "all",
	"ndv.output.branch": "Branch",
	"ndv.output.executing": "Executing node...",
	"ndv.output.items": "item | items",
	"ndv.output.noOutputData.message": "n8n stops executing the workflow when a node has no output data. You can change this default behaviour via",
	"ndv.output.noOutputData.message.settings": "Settings",
	"ndv.output.noOutputData.message.settingsOption": "> “Always Output Data”.",
	"ndv.output.noOutputData.title": "No output data returned",
	"ndv.output.noOutputDataInBranch": "No output data in this branch",
	"ndv.output.of": " of ",
	"ndv.output.pageSize": "Page Size",
	"ndv.output.run": "Run",
	"ndv.output.runNodeHint": "Execute this node to output data",
	"ndv.output.insertTestData": "insert test data",
	"ndv.output.staleDataWarning.regular": "Node parameters have changed.<br>Execute node again to refresh output.",
	"ndv.output.staleDataWarning.pinData": "Node parameter changes will not affect pinned output data.",
	"ndv.output.tooMuchData.message": "The node contains {size} MB of data. Displaying it may cause problems. <br /> If you do decide to display it, avoid the JSON view.",
	"ndv.output.tooMuchData.showDataAnyway": "Show data anyway",
	"ndv.output.tooMuchData.title": "Output data is huge!",
	"ndv.output.waitingToRun": "Waiting to execute...",
	"ndv.title.cancel": "Cancel",
	"ndv.title.rename": "Rename",
	"ndv.title.renameNode": "Rename node",
	"ndv.pinData.pin.title": "Pin data",
	"ndv.pinData.pin.description": "Node will always output this data instead of executing. You can also pin data from previous executions.",
	"ndv.pinData.pin.link": "More info",
	"ndv.pinData.pin.multipleRuns.title": "Run #{index} was pinned",
	"ndv.pinData.pin.multipleRuns.description": "This run will be outputted each time the node is run.",
	"ndv.pinData.unpinAndExecute.title": "Unpin output data?",
	"ndv.pinData.unpinAndExecute.description": "Executing a node overwrites pinned data.",
	"ndv.pinData.unpinAndExecute.cancel": "Cancel",
	"ndv.pinData.unpinAndExecute.confirm": "Unpin and execute",
	"ndv.pinData.beforeClosing.title": "Save output changes before closing?",
	"ndv.pinData.beforeClosing.cancel": "Discard",
	"ndv.pinData.beforeClosing.confirm": "Save",
	"ndv.pinData.error.tooLarge.title": "Output data is too large to pin",
	"ndv.pinData.error.tooLarge.description": "You can pin at most 12MB of output per workflow.",
	"noTagsView.readyToOrganizeYourWorkflows": "Ready to organize your workflows?",
	"noTagsView.withWorkflowTagsYouReFree": "With workflow tags, you're free to create the perfect tagging system for your flows",
	"node.activateDeactivateNode": "Activate/Deactivate Node",
	"node.deleteNode": "Delete Node",
	"node.disabled": "Disabled",
	"node.duplicateNode": "Duplicate Node",
	"node.editNode": "Edit Node",
	"node.executeNode": "Execute Node",
	"node.issues": "Issues",
	"node.nodeIsExecuting": "Node is executing",
	"node.nodeIsWaitingTill": "Node is waiting until {date} {time}",
	"node.theNodeIsWaitingIndefinitelyForAnIncomingWebhookCall": "The node is waiting for an incoming webhook call (indefinitely)",
	"node.waitingForYouToCreateAnEventIn": "Waiting for you to create an event in {nodeType}",
	"node.discovery.pinData.canvas": "You can pin this output instead of waiting for a test event. Open node to do so.",
	"node.discovery.pinData.ndv": "You can pin this output instead of waiting for a test event.",
	"nodeBase.clickToAddNodeOrDragToConnect": "Click to add node<br />or drag to connect",
	"nodeCreator.categoryNames.analytics": "Analytics",
	"nodeCreator.categoryNames.communication": "Communication",
	"nodeCreator.categoryNames.coreNodes": "Core Nodes",
	"nodeCreator.categoryNames.customNodes": "Custom Nodes",
	"nodeCreator.categoryNames.dataStorage": "Data & Storage",
	"nodeCreator.categoryNames.development": "Development",
	"nodeCreator.categoryNames.financeAccounting": "Finance & Accounting",
	"nodeCreator.categoryNames.marketingContent": "Marketing & Content",
	"nodeCreator.categoryNames.miscellaneous": "Miscellaneous",
	"nodeCreator.categoryNames.productivity": "Productivity",
	"nodeCreator.categoryNames.sales": "Sales",
	"nodeCreator.categoryNames.suggestedNodes": "Suggested Nodes ✨",
	"nodeCreator.categoryNames.utility": "Utility",
	"nodeCreator.mainPanel.all": "All",
	"nodeCreator.mainPanel.regular": "Regular",
	"nodeCreator.mainPanel.trigger": "Trigger",
	"nodeCreator.noResults.dontWorryYouCanProbablyDoItWithThe": "Don’t worry, you can probably do it with the",
	"nodeCreator.noResults.httpRequest": "HTTP Request",
	"nodeCreator.noResults.node": "node",
	"nodeCreator.noResults.or": "or",
	"nodeCreator.noResults.requestTheNode": "Request the node",
	"nodeCreator.noResults.wantUsToMakeItFaster": "Want us to make it faster?",
	"nodeCreator.noResults.weDidntMakeThatYet": "We didn't make that... yet",
	"nodeCreator.noResults.clickToSeeResults": "To see results, <a data-action='showAllNodeCreatorNodes'>click here</a>",
	"nodeCreator.noResults.webhook": "Webhook",
	"nodeCreator.searchBar.searchNodes": "Search nodes...",
	"nodeCreator.subcategoryDescriptions.appTriggerNodes": "Runs the flow when something happens in an app like Telegram, Notion or Airtable",
	"nodeCreator.subcategoryDescriptions.dataTransformation": "Manipulate data fields, run code",
	"nodeCreator.subcategoryDescriptions.files": "Work with CSV, XML, text, images etc.",
	"nodeCreator.subcategoryDescriptions.flow": "Branches, core triggers, merge data",
	"nodeCreator.subcategoryDescriptions.helpers": "HTTP Requests (API calls), date and time, scrape HTML",
	"nodeCreator.subcategoryDescriptions.otherTriggerNodes": "Runs the flow on workflow errors, file changes, and more",
	"nodeCreator.subcategoryNames.appTriggerNodes": "On App Event",
	"nodeCreator.subcategoryNames.dataTransformation": "Data Transformation",
	"nodeCreator.subcategoryNames.files": "Files",
	"nodeCreator.subcategoryNames.flow": "Flow",
	"nodeCreator.subcategoryNames.helpers": "Helpers",
	"nodeCreator.subcategoryNames.otherTriggerNodes": "Other ways...",
	"nodeCreator.subcategoryTitles.otherTriggerNodes": "Other Trigger Nodes",
	"nodeCreator.triggerHelperPanel.title": "When should this workflow run?",
	"nodeCreator.triggerHelperPanel.scheduleTriggerDisplayName": "On a Schedule",
	"nodeCreator.triggerHelperPanel.scheduleTriggerDescription": "Runs the flow every day, hour, or custom interval",
	"nodeCreator.triggerHelperPanel.webhookTriggerDisplayName": "On Webhook Call",
	"nodeCreator.triggerHelperPanel.webhookTriggerDescription": "Runs the flow when another app sends a webhook",
	"nodeCreator.triggerHelperPanel.manualTriggerDisplayName": "Manually",
	"nodeCreator.triggerHelperPanel.manualTriggerDescription": "Runs the flow on clicking a button in n8n",
	"nodeCreator.triggerHelperPanel.workflowTriggerDisplayName": "When Called By Another Workflow",
	"nodeCreator.triggerHelperPanel.workflowTriggerDescription": "Runs the flow when called by the Execute Workflow node from a different workflow",
	"nodeCredentials.createNew": "Create New",
	"nodeCredentials.credentialFor": "Credential for {credentialType}",
	"nodeCredentials.issues": "Issues",
	"nodeCredentials.selectCredential": "Select Credential",
	"nodeCredentials.showMessage.message": "Nodes that used credential \"{oldCredentialName}\" have been updated to use \"{newCredentialName}\"",
	"nodeCredentials.showMessage.title": "Node credential updated",
	"nodeCredentials.updateCredential": "Update Credential",
	"nodeErrorView.cause": "Cause",
	"nodeErrorView.copyToClipboard": "Copy to Clipboard",
	"nodeErrorView.dataBelowMayContain": "Data below may contain sensitive information. Proceed with caution when sharing.",
	"nodeErrorView.details": "Details",
	"nodeErrorView.error": "ERROR",
	"nodeErrorView.httpCode": "HTTP Code",
	"nodeErrorView.inParameter": "In or underneath Parameter",
	"nodeErrorView.itemIndex": "Item Index",
	"nodeErrorView.runIndex": "Run Index",
	"nodeErrorView.showMessage.title": "Copied to clipboard",
	"nodeErrorView.stack": "Stack",
	"nodeErrorView.theErrorCauseIsTooLargeToBeDisplayed": "The error cause is too large to be displayed",
	"nodeErrorView.time": "Time",
	"nodeErrorView.inputPanel.previousNodeError.title": "Error running node '{nodeName}'",
	"nodeErrorView.inputPanel.previousNodeError.text": "View error",
	"nodeHelpers.credentialsUnset": "Credentials for '{credentialType}' are not set.",
	"nodeSettings.alwaysOutputData.description": "If active, will output a single, empty item when the output would have been empty. Use to prevent the workflow finishing on this node.",
	"nodeSettings.alwaysOutputData.displayName": "Always Output Data",
	"nodeSettings.clickOnTheQuestionMarkIcon": "Click the '?' icon to open this node on n8n.io",
	"nodeSettings.continueOnFail.description": "If active, the workflow continues even if this node's execution fails. When this occurs, the node passes along input data from previous nodes - so your workflow should account for unexpected output data.",
	"nodeSettings.continueOnFail.displayName": "Continue On Fail",
	"nodeSettings.docs": "Docs",
	"nodeSettings.executeOnce.description": "If active, the node executes only once, with data from the first item it receives",
	"nodeSettings.executeOnce.displayName": "Execute Once",
	"nodeSettings.maxTries.description": "Number of times to attempt to execute the node before failing the execution",
	"nodeSettings.maxTries.displayName": "Max. Tries",
	"nodeSettings.noDescriptionFound": "No description found",
	"nodeSettings.nodeDescription": "Node Description",
	"nodeSettings.notes.description": "Optional note to save with the node",
	"nodeSettings.notes.displayName": "Notes",
	"nodeSettings.notesInFlow.description": "If active, the note above will display in the flow as a subtitle",
	"nodeSettings.notesInFlow.displayName": "Display Note in Flow?",
	"nodeSettings.parameters": "Parameters",
	"nodeSettings.communityNodeTooltip": "This is a <a href=\"{docUrl}\" target=\"_blank\"/>community node</a>",
	"nodeSettings.retryOnFail.description": "If active, the node tries to execute again when it fails",
	"nodeSettings.retryOnFail.displayName": "Retry On Fail",
	"nodeSettings.scopes.expandedNoticeWithScopes": "<a data-key=\"toggle-expand\">{count} scope</a> available for {activeCredential} credentials<br>{scopes}<br><a data-key=\"show-less\">Show less</a> | <a data-key=\"toggle-expand\">{count} scopes</a> available for {activeCredential} credentials<br>{scopes}<br><a data-key=\"show-less\">Show less</a>",
	"nodeSettings.scopes.notice": "<a data-key=\"toggle-expand\">{count} scope</a> available for {activeCredential} credentials | <a data-key=\"toggle-expand\">{count} scopes</a> available for {activeCredential} credentials",
	"nodeSettings.theNodeIsNotValidAsItsTypeIsUnknown": "The node is not valid as its type ({nodeType}) is unknown",
	"nodeSettings.communityNodeUnknown.title": "Install this node to use it",
	"nodeSettings.communityNodeUnknown.description": "This node is not currently installed. It's part of the {action} community package.",
	"nodeSettings.communityNodeUnknown.installLink.text": "How to install community nodes",
	"nodeSettings.nodeTypeUnknown.description": "This node is not currently installed. It is either from a newer version of n8n, a {action}, or has an invalid structure",
	"nodeSettings.nodeTypeUnknown.description.customNode": "custom node",
	"nodeSettings.thisNodeDoesNotHaveAnyParameters": "This node does not have any parameters",
	"nodeSettings.useTheHttpRequestNode": "Use the <b>HTTP Request</b> node to make a custom API call. We'll take care of the {nodeTypeDisplayName} auth for you. <a target=\"_blank\" href=\"https://docs.n8n.io/integrations/custom-operations/\">Learn more</a>",
	"nodeSettings.waitBetweenTries.description": "How long to wait between each attempt (in milliseconds)",
	"nodeSettings.waitBetweenTries.displayName": "Wait Between Tries (ms)",
	"nodeView.addNode": "Add node",
	"nodeView.addATriggerNodeFirst": "Add a <a data-action='showNodeCreator'>Trigger Node</a> first",
	"nodeView.addOrEnableTriggerNode": "<a data-action='showNodeCreator'>Add</a> or enable a Trigger node to execute the workflow",
	"nodeView.addSticky": "Click to add sticky note",
	"nodeView.cantExecuteNoTrigger": "Cannot execute workflow",
	"nodeView.canvasAddButton.addATriggerNodeBeforeExecuting": "Add a Trigger Node before executing the workflow",
	"nodeView.canvasAddButton.addFirstStep": "Add first step…",
	"nodeView.confirmMessage.receivedCopyPasteData.cancelButtonText": "",
	"nodeView.confirmMessage.receivedCopyPasteData.confirmButtonText": "Yes, import",
	"nodeView.confirmMessage.receivedCopyPasteData.headline": "Import Workflow?",
	"nodeView.confirmMessage.receivedCopyPasteData.message": "Workflow will be imported from<br /><i>{plainTextData}<i>",
	"nodeView.couldntImportWorkflow": "Could not import workflow",
	"nodeView.deletesTheCurrentExecutionData": "Deletes the current execution data",
	"nodeView.executesTheWorkflowFromATriggerNode": "Runs the workflow, starting from a Trigger node",
	"nodeView.itLooksLikeYouHaveBeenEditingSomething": "It looks like you made some edits. If you leave before saving, your changes will be lost.",
	"nodeView.loadingTemplate": "Loading template",
	"nodeView.moreInfo": "More info",
	"nodeView.noNodesGivenToAdd": "No nodes to add specified",
	"nodeView.prompt.cancel": "@:_reusableBaseText.cancel",
	"nodeView.prompt.invalidName": "Invalid Name",
	"nodeView.prompt.newName": "New Name",
	"nodeView.prompt.rename": "Rename",
	"nodeView.prompt.renameNode": "Rename Node",
	"nodeView.redirecting": "Redirecting",
	"nodeView.refresh": "Refresh",
	"nodeView.resetZoom": "Reset Zoom",
	"nodeView.runButtonText.executeWorkflow": "Execute Workflow",
	"nodeView.runButtonText.executingWorkflow": "Executing Workflow",
	"nodeView.runButtonText.waitingForTriggerEvent": "Waiting for Trigger Event",
	"nodeView.showError.getWorkflowDataFromUrl.title": "Problem loading workflow",
	"nodeView.showError.importWorkflowData.title": "Problem importing workflow",
	"nodeView.showError.mounted1.message": "There was a problem loading init data",
	"nodeView.showError.mounted1.title": "Init Problem",
	"nodeView.showError.mounted2.message": "There was a problem initializing the workflow",
	"nodeView.showError.mounted2.title": "Init Problem",
	"nodeView.showError.openExecution.title": "Problem loading execution",
	"nodeView.showError.openWorkflow.title": "Problem opening workflow",
	"nodeView.showError.stopExecution.title": "Problem stopping execution",
	"nodeView.showError.stopWaitingForWebhook.title": "Problem deleting test webhook",
	"nodeView.showMessage.addNodeButton.message": "'{nodeTypeName}' is an unknown node type",
	"nodeView.showMessage.addNodeButton.title": "Could not insert node",
	"nodeView.showMessage.keyDown.title": "Workflow created",
	"nodeView.showMessage.showMaxNodeTypeError.message": "Only one '{nodeTypeDataDisplayName}' node is allowed in a workflow | Only {count} '{nodeTypeDataDisplayName}' nodes are allowed in a workflow",
	"nodeView.showMessage.showMaxNodeTypeError.title": "Could not insert node",
	"nodeView.showMessage.stopExecutionCatch.message": "It completed before it could be stopped",
	"nodeView.showMessage.stopExecutionCatch.title": "Workflow finished executing",
	"nodeView.showMessage.stopExecutionTry.title": "Execution stopped",
	"nodeView.stopCurrentExecution": "Stop current execution",
	"nodeView.stopWaitingForWebhookCall": "Stop waiting for webhook call",
	"nodeView.stoppingCurrentExecution": "Stopping current execution",
	"nodeView.thereWasAProblemLoadingTheNodeParametersOfNode": "There was a problem loading the parameters of the node",
	"nodeView.thisExecutionHasntFinishedYet": "This execution hasn't finished yet",
	"nodeView.toSeeTheLatestStatus": "to see the latest status",
	"nodeView.workflowTemplateWithIdCouldNotBeFound": "Workflow template with ID \"{templateId}\" could not be found",
	"nodeView.workflowWithIdCouldNotBeFound": "Workflow with ID \"{workflowId}\" could not be found",
	"nodeView.zoomIn": "Zoom In",
	"nodeView.zoomOut": "Zoom Out",
	"nodeView.zoomToFit": "Zoom to Fit",
	"nodeWebhooks.clickToCopyWebhookUrls": "Click to copy webhook URLs",
	"nodeWebhooks.clickToDisplayWebhookUrls": "Click to display webhook URLs",
	"nodeWebhooks.clickToHideWebhookUrls": "Click to hide webhook URLs",
	"nodeWebhooks.invalidExpression": "[INVALID EXPRESSION]",
	"nodeWebhooks.productionUrl": "Production URL",
	"nodeWebhooks.showMessage.title": "URL copied",
	"nodeWebhooks.testUrl": "Test URL",
	"nodeWebhooks.webhookUrls": "Webhook URLs",
	"onboardingCallSignupModal.title": "Your onboarding session",
	"onboardingCallSignupModal.description": "Pop in your email and we'll send you some scheduling options",
	"onboardingCallSignupModal.emailInput.placeholder": "Your work email",
	"onboardingCallSignupModal.signupButton.label": "Submit",
	"onboardingCallSignupModal.cancelButton.label": "Cancel",
	"onboardingCallSignupModal.infoText.emailError": "This doesn't seem to be a valid email address",
	"onboardingCallSignupSucess.title": "Check your email for the final step",
	"onboardingCallSignupSucess.message": "You should receive a message from us shortly",
	"onboardingCallSignupFailed.title": "Something went wrong",
	"onboardingCallSignupFailed.message": "Your request could not be sent",
	"onboardingCallSignupModal.confirmExit.title": "Are you sure?",
	"onboardingWorkflow.stickyContent": "## 👇 Get started faster \nLightning tour of the key concepts [3 min] \n\n[![n8n quickstart video](/static/quickstart_thumbnail.png#full-width)](https://www.youtube.com/watch?v=RpjQTGKm-ok)",
	"openWorkflow.workflowImportError": "Could not import workflow",
	"openWorkflow.workflowNotFoundError": "Could not find workflow",
	"parameterInput.expressionResult": "e.g. {result}",
	"parameterInput.emptyString": "[empty]",
	"parameterInput.customApiCall": "Custom API Call",
	"parameterInput.error": "ERROR",
	"parameterInput.expression": "Expression",
	"parameterInput.fixed": "Fixed",
	"parameterInput.issues": "Issues",
	"parameterInput.loadingOptions": "Loading options...",
	"parameterInput.openEditWindow": "Open Edit Window",
	"parameterInput.parameter": "Parameter: \"{shortPath}\"",
	"parameterInput.parameterHasExpression": "Parameter: \"{shortPath}\" has an expression",
	"parameterInput.parameterHasIssues": "Parameter: \"{shortPath}\" has issues",
	"parameterInput.parameterHasIssuesAndExpression": "Parameter: \"{shortPath}\" has issues and an expression",
	"parameterInput.refreshList": "Refresh List",
	"parameterInput.resetValue": "Reset Value",
	"parameterInput.select": "Select",
	"parameterInput.selectDateAndTime": "Select date and time",
	"parameterInput.selectACredentialTypeFromTheDropdown": "Select a credential type from the dropdown",
	"parameterInput.theValueIsNotSupported": "The value \"{checkValue}\" is not supported!",
	"parameterInputExpanded.openDocs": "Open docs",
	"parameterInputExpanded.thisFieldIsRequired": "This field is required",
	"parameterInputList.delete": "Delete",
	"parameterInputList.deleteParameter": "Delete Parameter",
	"parameterInputList.parameterOptions": "Parameter Options",
	"personalizationModal.continue": "Continue",
	"personalizationModal.customerIntegrations": "Customer integrations",
	"personalizationModal.customerSupport": "Customer support",
	"personalizationModal.customizeN8n": "Customize n8n to you",
	"personalizationModal.digitalAgencyOrConsultant": "Marketing agency / consultancy",
	"personalizationModal.eCommerce": "eCommerce",
	"personalizationModal.education": "Education",
	"personalizationModal.engineeringOrDevops": "Engineering / Devops",
	"personalizationModal.errorWhileSubmittingResults": "Error while submitting results",
	"personalizationModal.financeOrAccounting": "Finance / Accounting",
	"personalizationModal.financeOrInsurance": "Finance / Insurance",
	"personalizationModal.getStarted": "Get started",
	"personalizationModal.government": "Government",
	"personalizationModal.healthcare": "Healthcare",
	"personalizationModal.howAreYourCodingSkills": "How are your coding skills?",
	"personalizationModal.howBigIsYourCompany": "How big is your company?",
	"personalizationModal.hr": "HR",
	"personalizationModal.imNotUsingN8nForWork": "I'm not using n8n for work",
	"personalizationModal.it": "IT",
	"personalizationModal.legal": "Legal",
	"personalizationModal.lessThan20People": "Less than 20 people",
	"personalizationModal.lookOutForThingsMarked": "Look out for things marked with a ✨. They are personalized to make n8n more relevant to you.",
	"personalizationModal.managedServiceProvider": "Managed service provider",
	"personalizationModal.manufacturing": "Manufacturing",
	"personalizationModal.marketing": "Marketing",
	"personalizationModal.media": "Media",
	"personalizationModal.notSureYet": "Not sure yet",
	"personalizationModal.operations": "Operations",
	"personalizationModal.other": "Other",
	"personalizationModal.otherPleaseSpecify": "Other (please specify)",
	"personalizationModal.people": "people",
	"personalizationModal.physicalRetailOrServices": "Physical retail or services",
	"personalizationModal.product": "Product (e.g. fast prototyping)",
	"personalizationModal.realEstateOrConstruction": "Real estate / Construction",
	"personalizationModal.saas": "Software as a service",
	"personalizationModal.salesAndMarketing": "Sales and Marketing",
	"personalizationModal.security": "Security",
	"personalizationModal.select": "Select...",
	"personalizationModal.specifyYourAutomationGoal": "Please specify your automation goal",
	"personalizationModal.specifyYourCompanysIndustry": "Specify your company's industry",
	"personalizationModal.support": "Support",
	"personalizationModal.systemsIntegrator": "Systems integrator / Automation agency",
	"personalizationModal.telecoms": "Telecoms",
	"personalizationModal.thanks": "Thanks!",
	"personalizationModal.theseQuestionsHelpUs": "These questions help us tailor n8n to you",
	"personalizationModal.whatAreYouLookingToAutomate": "What are you looking to automate?",
	"personalizationModal.whatBestDescribesYourCompany": "What best describes your company?",
	"personalizationModal.whichIndustriesIsYourCompanyIn": "Which industries is your company in?",
	"personalizationModal.specifySalesMarketingGoal": "Which parts of Sales and Marketing?",
	"personalizationModal.leadGeneration": "Lead generation, enrichment, routing",
	"personalizationModal.customerCommunication": "Customer communication",
	"personalizationModal.customerActions": "Actions when lead changes status",
	"personalizationModal.adCampaign": "Ad campaign management",
	"personalizationModal.reporting": "Reporting",
	"personalizationModal.dataSynching": "Data syncing",
	"personalizationModal.specifyUsageMode": "Are you looking to do any of these?",
	"personalizationModal.connectToInternalDB": "Connect to my company’s internal databases",
	"personalizationModal.buildBackendServices": "Build backend services (endpoints)",
	"personalizationModal.manipulateFiles": "Manipulate/transfer files",
	"personalizationModal.specifyOtherSalesAndMarketingGoal": "Specify your other Sales and Marketing goals",
	"pushConnection.nodeExecutedSuccessfully": "Node executed successfully",
	"pushConnection.workflowExecutedSuccessfully": "Workflow executed successfully",
	"pushConnectionTracker.cannotConnectToServer": "You have a connection issue or the server is down. <br />n8n should reconnect automatically once the issue is resolved.",
	"pushConnectionTracker.connectionLost": "Connection lost",
	"pushConnection.pollingNode.dataNotFound": "No {service} data found",
	"pushConnection.pollingNode.dataNotFound.message": "We didn’t find any data in {service} to simulate an event. Please create one in {service} and try again.",
	"resourceLocator.id.placeholder": "Enter ID...",
	"resourceLocator.mode.id": "By ID",
	"resourceLocator.mode.url": "By URL",
	"resourceLocator.mode.list": "From list",
	"resourceLocator.mode.list.disabled.title": "Change to Fixed mode to choose From List",
	"resourceLocator.mode.list.error.title": "Could not load list",
	"resourceLocator.mode.list.error.description.part1": "Please",
	"resourceLocator.mode.list.error.description.part2": "check your credential",
	"resourceLocator.mode.list.noResults": "No results",
	"resourceLocator.mode.list.openUrl": "Open URL",
	"resourceLocator.mode.list.placeholder": "Choose...",
	"resourceLocator.mode.list.searchRequired": "Enter a search term to show results",
	"resourceLocator.modeSelector.placeholder": "Mode...",
	"resourceLocator.openSpecificResource": "Open {entity} in {appName}",
	"resourceLocator.openResource": "Open in {appName}",
	"resourceLocator.search.placeholder": "Search...",
	"resourceLocator.url.placeholder": "Enter URL...",
	"runData.emptyItemHint": "This is an item, but it's empty.",
	"runData.emptyArray": "[empty array]",
	"runData.emptyString": "[empty]",
	"runData.emptyObject": "[empty object]",
	"runData.unnamedField": "[Unnamed field]",
	"runData.switchToBinary.info": "This item only has",
	"runData.switchToBinary.binary": "binary data",
	"runData.linking.hint": "Link displayed input and output runs",
	"runData.unlinking.hint": "Unlink displayed input and output runs",
	"runData.binary": "Binary",
	"runData.copyItemPath": "Copy Item Path",
	"runData.copyItemPath.toast": "Item path copied",
	"runData.copyParameterPath": "Copy Parameter Path",
	"runData.copyParameterPath.toast": "Parameter path copied",
	"runData.copyValue": "Copy Selection",
	"runData.copyValue.toast": "Output data copied",
	"runData.copyToClipboard": "Copy to Clipboard",
	"runData.copyDisabled": "First click on the output data you want to copy, then click this button.",
	"runData.editOutput": "Edit Output",
	"runData.editOutputInvalid": "Problem with output data",
	"runData.editOutputInvalid.singleQuote": "Unexpected single quote. Please use double quotes (\") instead",
	"runData.editOutputInvalid.onLine": "On line {line}:",
	"runData.editOutputInvalid.atPosition": "(at position {position})",
	"runData.editValue": "Edit Value",
	"runData.downloadBinaryData": "Download",
	"runData.executeNode": "Execute Node",
	"runData.executionTime": "Execution Time",
	"runData.fileExtension": "File Extension",
	"runData.fileName": "File Name",
	"runData.invalidPinnedData": "Invalid pinned data",
	"runData.items": "Items",
	"runData.json": "JSON",
	"runData.mimeType": "Mime Type",
	"runData.ms": "ms",
	"runData.noBinaryDataFound": "No binary data found",
	"runData.noData": "No data",
	"runData.noTextDataFound": "No text data found",
	"runData.nodeReturnedALargeAmountOfData": "Node returned a large amount of data",
	"runData.output": "Output",
	"runData.showBinaryData": "View",
	"runData.startTime": "Start Time",
	"runData.table": "Table",
	"runData.pindata.learnMore": "Learn more",
	"runData.pindata.thisDataIsPinned": "This data is pinned.",
	"runData.pindata.unpin": "Unpin",
	"runData.editor.save": "Save",
	"runData.editor.cancel": "Cancel",
	"runData.editor.copyDataInfo": "You can copy data from previous executions and paste it above.",
	"saveButton.save": "@:_reusableBaseText.save",
	"saveButton.saved": "Saved",
	"saveButton.saving": "Saving",
	"settings": "Settings",
	"settings.communityNodes": "Community nodes",
	"settings.communityNodes.empty.title": "Supercharge your workflows with community nodes",
	"settings.communityNodes.empty.description": "Install over {count} node packages contributed by our community.",
	"settings.communityNodes.empty.description.no-packages": "Install node packages contributed by our community.",
	"settings.communityNodes.empty.installPackageLabel": "Install a community node",
	"settings.communityNodes.queueMode.warning": "You need to install community nodes manually because your instance is running in queue mode. <a href=\"{docURL}\" target=\"_blank\" title=\"Read the n8n docs\">More info</a>",
	"settings.communityNodes.npmUnavailable.warning": "To use this feature, please <a href=\"{npmUrl}\" target=\"_blank\" title=\"How to install npm\">install npm</a> and restart n8n.",
	"settings.communityNodes.notAvailableOnDesktop": "Feature unavailable on desktop. Please self-host to use community nodes.",
	"settings.communityNodes.packageNodes.label": "{count} node | {count} nodes",
	"settings.communityNodes.updateAvailable.tooltip": "A newer version is available",
	"settings.communityNodes.viewDocsAction.label": "Documentation",
	"settings.communityNodes.uninstallAction.label": "Uninstall package",
	"settings.communityNodes.upToDate.tooltip": "You are up to date",
	"settings.communityNodes.failedToLoad.tooltip": "There is a problem with this package, try uninstalling it then reinstalling to resolve this issue",
	"settings.communityNodes.fetchError.title": "Problem fetching installed packages",
	"settings.communityNodes.fetchError.message": "There may be a problem with your internet connection or your n8n instance",
	"settings.communityNodes.installModal.title": "Install community nodes",
	"settings.communityNodes.installModal.description": "Find community nodes to add on the npm public registry.",
	"settings.communityNodes.browseButton.label": "Browse",
	"settings.communityNodes.installModal.packageName.label": "npm Package Name",
	"settings.communityNodes.installModal.packageName.tooltip": "<img src='/static/community_package_tooltip_img.png'/><p>This is the title of the package on <a href='{npmURL}'>npmjs.com</a></p><p>Install a specific version by adding it after @, e.g. <code>package-name@0.15.0</code></p>",
	"settings.communityNodes.installModal.packageName.placeholder": "e.g. n8n-nodes-chatwork",
	"settings.communityNodes.installModal.checkbox.label": "I understand the risks of installing unverified code from a public source.",
	"settings.communityNodes.installModal.installButton.label": "Install",
	"settings.communityNodes.installModal.installButton.label.loading": "Installing",
	"settings.communityNodes.installModal.error.packageNameNotValid": "Package name must start with n8n-nodes-",
	"settings.communityNodes.messages.install.success": "Package installed",
	"settings.communityNodes.messages.install.error": "Error installing new package",
	"settings.communityNodes.messages.uninstall.error": "Problem uninstalling package",
	"settings.communityNodes.messages.uninstall.success.title": "Package uninstalled",
	"settings.communityNodes.messages.update.success.title": "Package updated",
	"settings.communityNodes.messages.update.success.message": "{packageName} updated to version {version}",
	"settings.communityNodes.messages.update.error.title": "Problem updating package",
	"settings.communityNodes.confirmModal.uninstall.title": "Uninstall package?",
	"settings.communityNodes.confirmModal.uninstall.message": "Any workflows that use nodes from the {packageName} package won't be able to run. Are you sure?",
	"settings.communityNodes.confirmModal.uninstall.buttonLabel": "Uninstall package",
	"settings.communityNodes.confirmModal.uninstall.buttonLoadingLabel": "Uninstalling",
	"settings.communityNodes.confirmModal.update.title": "Update community node package?",
	"settings.communityNodes.confirmModal.update.message": "You are about to update {packageName} to version {version}",
	"settings.communityNodes.confirmModal.update.description": "We recommend you deactivate workflows that use any of the package's nodes and reactivate them once the update is completed",
	"settings.communityNodes.confirmModal.update.buttonLabel": "Update package",
	"settings.communityNodes.confirmModal.update.buttonLoadingLabel": "Updating...",
	"settings.goBack": "Go back",
	"settings.personal": "Personal",
	"settings.personal.basicInformation": "Basic Information",
	"settings.personal.personalSettings": "Personal Settings",
	"settings.personal.personalSettingsUpdated": "Personal details updated",
	"settings.personal.personalSettingsUpdatedError": "Problem updating your details",
	"settings.personal.save": "Save",
	"settings.personal.security": "Security",
	"settings.signup.signUpInviterInfo": "{firstName} {lastName} has invited you to n8n",
	"settings.users": "Users",
	"settings.users.confirmDataHandlingAfterDeletion": "What should we do with their data?",
	"settings.users.confirmUserDeletion": "Are you sure you want to delete this invited user?",
	"settings.users.delete": "Delete",
	"settings.users.deleteConfirmationMessage": "Type “delete all data” to confirm",
	"settings.users.deleteConfirmationText": "delete all data",
	"settings.users.deleteUser": "Delete {user}",
	"settings.users.deleteWorkflowsAndCredentials": "Delete their workflows and credentials",
	"settings.users.emailInvitesSent": "An invite email was sent to {emails}",
	"settings.users.emailInvitesSentError": "Could not invite {emails}",
	"settings.users.emailSentTo": "Email sent to {email}",
	"settings.users.invalidEmailError": "{email} is not a valid email",
	"settings.users.invite": "Invite",
	"settings.users.inviteNewUsers": "Invite new users",
	"settings.users.inviteResent": "Invite resent",
	"settings.users.inviteUser": "Invite user",
	"settings.users.inviteXUser": "Invite {count} users",
	"settings.users.newEmailsToInvite": "New User Email Addresses",
	"settings.users.noUsersToInvite": "No users to invite",
	"settings.users.setupMyAccount": "Set up my owner account",
	"settings.users.setupSMTPToInviteUsers": "Set up SMTP to invite users. {action}",
	"settings.users.setupSMTPToInviteUsers.instructions": "Instructions",
	"settings.users.setupToInviteUsers": "To invite users, set up your own account",
	"settings.users.setupToInviteUsersInfo": "Invited users won’t be able to see workflows and credentials of other users. <a href=\"https://docs.n8n.io/reference/user-management.html\" target=\"_blank\">More info</a> <br /> <br /> You will need details of an <a href=\"https://docs.n8n.io/reference/user-management.html#step-one-smtp\" target=\"_blank\">SMTP server</a> to complete the setup.",
	"settings.users.smtpToAddUsersWarning": "Set up SMTP before adding users (so that n8n can send them invitation emails). <a target=\"_blank\" href=\"https://docs.n8n.io/reference/user-management.html#step-one-smtp\">Instructions</a>",
	"settings.users.transferWorkflowsAndCredentials": "Transfer their workflows and credentials to another user",
	"settings.users.transferredToUser": "Data transferred to {user}",
	"settings.users.userDeleted": "User deleted",
	"settings.users.userDeletedError": "Problem while deleting user",
	"settings.users.userInvited": "User invited",
	"settings.users.userInvitedError": "User could not be invited",
	"settings.users.userReinviteError": "Could not reinvite user",
	"settings.users.userToTransferTo": "User to transfer to",
	"settings.users.usersEmailedError": "Couldn't send invite email",
	"settings.users.usersInvited": "Users invited",
	"settings.users.usersInvitedError": "Could not invite users",
	"settings.api": "API",
	"settings.n8napi": "n8n API",
	"settings.api.create.description": "Control n8n programmatically using the <a href=\"https://docs.n8n.io/api\" target=\"_blank\">n8n API</a>",
	"settings.api.create.button": "Create an API Key",
	"settings.api.create.button.loading": "Creating API Key...",
	"settings.api.create.error": "Creating the API Key failed.",
	"settings.api.delete.title": "Delete this API Key?",
	"settings.api.delete.description": "Any application using this API Key will no longer have access to n8n. This operation cannot be undone.",
	"settings.api.delete.button": "Delete Forever",
	"settings.api.delete.error": "Deleting the API Key failed.",
	"settings.api.delete.toast": "API Key deleted",
	"settings.api.view.copy.toast": "API Key copied to clipboard",
	"settings.api.view.apiPlayground": "API Playground",
	"settings.api.view.info": "Use your API Key to control n8n programmatically using the {apiAction}. But if you only want to trigger workflows, consider using the {webhookAction} instead.",
	"settings.api.view.info.api": "n8n API",
	"settings.api.view.info.webhook": "webhook node",
	"settings.api.view.myKey": "My API Key",
	"settings.api.view.tryapi": "Try it out using the",
	"settings.api.view.error": "Could not check if an api key already exists.",
	"settings.version": "Version",
	"showMessage.cancel": "@:_reusableBaseText.cancel",
	"showMessage.ok": "OK",
	"showMessage.showDetails": "Show Details",
	"startupError": "Error connecting to n8n",
	"startupError.message": "Could not connect to server. <a data-action='reload'>Refresh</a> to try again",
	"tagsDropdown.createTag": "Create tag \"{filter}\"",
	"tagsDropdown.manageTags": "Manage tags",
	"tagsDropdown.noMatchingTagsExist": "No matching tags exist",
	"tagsDropdown.noTagsExist": "No tags exist",
	"tagsDropdown.showError.message": "A problem occurred when trying to create the '{name}' tag",
	"tagsDropdown.showError.title": "Could not create tag",
	"tagsDropdown.typeToCreateATag": "Type to create a tag",
	"tagsManager.couldNotDeleteTag": "Could not delete tag",
	"tagsManager.done": "Done",
	"tagsManager.manageTags": "Manage tags",
	"tagsManager.showError.onCreate.message": "A problem occurred when trying to create the tag '{escapedName}'",
	"tagsManager.showError.onCreate.title": "Could not create tag",
	"tagsManager.showError.onDelete.message": "A problem occurred when trying to delete the tag '{escapedName}'",
	"tagsManager.showError.onDelete.title": "Could not delete tag",
	"tagsManager.showError.onUpdate.message": "A problem occurred when trying to update the tag '{escapedName}'",
	"tagsManager.showError.onUpdate.title": "Could not update tag",
	"tagsManager.showMessage.onDelete.title": "Tag deleted",
	"tagsManager.showMessage.onUpdate.title": "Tag updated",
	"tagsManager.tagNameCannotBeEmpty": "Tag name cannot be empty",
	"tagsTable.areYouSureYouWantToDeleteThisTag": "Are you sure you want to delete this tag?",
	"tagsTable.cancel": "@:_reusableBaseText.cancel",
	"tagsTable.createTag": "Create tag",
	"tagsTable.deleteTag": "Delete tag",
	"tagsTable.editTag": "Edit Tag",
	"tagsTable.name": "@:_reusableBaseText.name",
	"tagsTable.noMatchingTagsExist": "No matching tags exist",
	"tagsTable.saveChanges": "Save changes?",
	"tagsTable.usage": "Usage",
	"tagsTableHeader.addNew": "Add new",
	"tagsTableHeader.searchTags": "Search Tags",
	"tagsView.inUse": "{count} workflow | {count} workflows",
	"tagsView.notBeingUsed": "Not being used",
	"template.buttons.goBackButton": "Go back",
	"template.buttons.useThisWorkflowButton": "Use this workflow",
	"template.details.appsInTheCollection": "This collection features",
	"template.details.appsInTheWorkflow": "Apps in this workflow",
	"template.details.by": "by",
	"template.details.categories": "Categories",
	"template.details.created": "Created",
	"template.details.details": "Details",
	"template.details.times": "times",
	"template.details.viewed": "Viewed",
	"templates.allCategories": "All Categories",
	"templates.categoriesHeading": "Categories",
	"templates.collection": "Collection",
	"templates.collections": "Collections",
	"templates.collectionsNotFound": "Collection could not be found",
	"templates.connectionWarning": "⚠️ There was a problem fetching workflow templates. Check your internet connection.",
	"templates.endResult": "Share your own useful workflows through your <a href='https://n8n.io/dashboard' target='_blank'>n8n.io account</a>",
	"templates.heading": "Workflow templates",
	"templates.newButton": "New blank workflow",
	"templates.noSearchResults": "Nothing found. Try adjusting your search to see more.",
	"templates.searchPlaceholder": "Search workflows",
	"templates.workflow": "Workflow",
	"templates.workflows": "Workflows",
	"templates.workflowsNotFound": "Workflow could not be found",
	"textEdit.edit": "Edit",
	"timeAgo.daysAgo": "%s days ago",
	"timeAgo.hoursAgo": "%s hours ago",
	"timeAgo.inDays": "in %s days",
	"timeAgo.inHours": "in %s hours",
	"timeAgo.inMinutes": "in %s minutes",
	"timeAgo.inMonths": "in %s months",
	"timeAgo.inOneDay": "in 1 day",
	"timeAgo.inOneHour": "in 1 hour",
	"timeAgo.inOneMinute": "in 1 minute",
	"timeAgo.inOneMonth": "in 1 month",
	"timeAgo.inOneWeek": "in 1 week",
	"timeAgo.inOneYear": "in 1 year",
	"timeAgo.inWeeks": "in %s weeks",
	"timeAgo.inYears": "in %s years",
	"timeAgo.justNow": "Just now",
	"timeAgo.minutesAgo": "%s minutes ago",
	"timeAgo.monthsAgo": "%s months ago",
	"timeAgo.oneDayAgo": "1 day ago",
	"timeAgo.oneHourAgo": "1 hour ago",
	"timeAgo.oneMinuteAgo": "1 minute ago",
	"timeAgo.oneMonthAgo": "1 month ago",
	"timeAgo.oneWeekAgo": "1 week ago",
	"timeAgo.oneYearAgo": "1 year ago",
	"timeAgo.rightNow": "Right now",
	"timeAgo.weeksAgo": "%s weeks ago",
	"timeAgo.yearsAgo": "%s years ago",
	"nodeIssues.credentials.notSet": "Credentials for {type} are not set.",
	"nodeIssues.credentials.notAvailable": "Credential is not available",
	"nodeIssues.credentials.doNotExist": "Credentials with name {name} do not exist for {type}.",
	"nodeIssues.credentials.doNotExist.hint": "You can create credentials with the exact name and then they get auto-selected on refresh..",
	"nodeIssues.credentials.notIdentified": "Credentials with name {name} exist for {type}.",
	"nodeIssues.credentials.notIdentified.hint": "Credentials are not clearly identified. Please select the correct credentials.",
	"ndv.trigger.moreInfo": "More info",
	"ndv.trigger.copiedTestUrl": "Test URL copied to clipboard",
	"ndv.trigger.webhookBasedNode.executionsHelp.inactive": "<b>While building your workflow</b>, click the 'listen' button, then go to {service} and make an event happen. This will trigger an execution, which will show up in this editor.<br /> <br /> <b>Once you're happy with your workflow</b>, <a data-key=\"activate\">activate</a> it. Then every time there's a matching event in {service}, the workflow will execute. These executions will show up in the <a data-key=\"executions\">executions list</a>, but not in the editor.",
	"ndv.trigger.webhookBasedNode.executionsHelp.active": "<b>While building your workflow</b>, click the 'listen' button, then go to {service} and make an event happen. This will trigger an execution, which will show up in this editor.<br /> <br /> <b>Your workflow will also execute automatically</b>, since it's activated. Every time there’s a matching event in {service}, this node will trigger an execution. These executions will show up in the <a data-key=\"executions\">executions list</a>, but not in the editor. ",
	"ndv.trigger.webhookNode.listening": "Listening for test event",
	"ndv.trigger.webhookBasedNode.listening": "Listening for your trigger event",
	"ndv.trigger.webhookNode.requestHint": "Make a {type} request to:",
	"ndv.trigger.webhookBasedNode.serviceHint": "Go to {service} and create an event",
	"ndv.trigger.webhookBasedNode.activationHint.inactive": "Once you’ve finished building your workflow, <a data-key=\"activate\">activate it</a> to have it also listen continuously (you just won’t see those executions here).",
	"ndv.trigger.webhookBasedNode.activationHint.active": "This node will also trigger automatically on new {service} events (but those executions won’t show up here).",
	"ndv.trigger.pollingNode.activationHint.inactive": "Once you’ve finished building your workflow, <a data-key=\"activate\">activate it</a> to have it also check for events regularly (you just won’t see those executions here).",
	"ndv.trigger.pollingNode.activationHint.active": "This node will also trigger automatically on new {service} events (but those executions won’t show up here).",
	"ndv.trigger.executionsHint.question": "When will this node trigger my flow?",
	"ndv.trigger.pollingNode.fetchingEvent": "Fetching event",
	"ndv.trigger.pollingNode.fetchingHint": "This node is looking for an event in {name} that is similar to the one you defined",
	"ndv.trigger.pollingNode.executionsHelp.inactive": "<b>While building your workflow</b>, click the 'fetch' button to fetch a single mock event. It will show up in this editor.<br /><br /><b>Once you're happy with your workflow</b>, <a data-key=\"activate\">activate</a> it. Then n8n will regularly check {service} for new events, and execute this workflow if it finds any. These executions will show up in the <a data-key=\"executions\">executions list</a>, but not in the editor.",
	"ndv.trigger.pollingNode.executionsHelp.active": "<b>While building your workflow</b>, click the 'fetch' button to fetch a single mock event. It will show up in this editor.<br /><br /><b>Your workflow will also execute automatically</b>, since it's activated. n8n will regularly check {app_name} for new events, and execute this workflow if it finds any. These executions will show up in the <a data-key=\"executions\">executions list</a>, but not in the editor.",
	"ndv.trigger.webhookBasedNode.action": "Pull in events from {name}",
	"updatesPanel.andIs": "and is",
	"updatesPanel.behindTheLatest": "behind the latest and greatest n8n",
	"updatesPanel.howToUpdateYourN8nVersion": "How to update your n8n version",
	"updatesPanel.version": "{numberOfVersions} version{howManySuffix}",
	"updatesPanel.weVeBeenBusy": "We’ve been busy ✨",
	"updatesPanel.youReOnVersion": "You’re on {currentVersionName}, which was released",
	"variableSelector.context": "Context",
	"variableSelector.currentNode": "Current Node",
	"variableSelector.nodes": "Nodes",
	"variableSelector.outputData": "Output Data",
	"variableSelector.parameters": "Parameters",
	"variableSelector.variableFilter": "Variable filter...",
	"variableSelectorItem.empty": "--- EMPTY ---",
	"variableSelectorItem.selectItem": "Select Item",
	"versionCard.breakingChanges": "Breaking changes",
	"versionCard.released": "Released",
	"versionCard.securityUpdate": "Security update",
	"versionCard.thisVersionHasASecurityIssue": "This version has a security issue.<br />It is listed here for completeness.",
	"versionCard.unknown": "unknown",
	"versionCard.version": "Version",
	"workflowActivator.workflowIsActive": "Workflow is already active",
	"workflowActivator.activateWorkflow": "Activate workflow",
	"workflowActivator.deactivateWorkflow": "Deactivate workflow",
	"workflowActivator.active": "Active",
	"workflowActivator.inactive": "Inactive",
	"workflowActivator.showError.title": "Workflow could not be {newStateName}",
	"workflowActivator.showMessage.activeChangedNodesIssuesExistTrue.message": "Please resolve outstanding issues before you activate it",
	"workflowActivator.showMessage.activeChangedNodesIssuesExistTrue.title": "Problem activating workflow",
	"workflowActivator.showMessage.activeChangedWorkflowIdUndefined.message": "Please save it before activating",
	"workflowActivator.showMessage.activeChangedWorkflowIdUndefined.title": "Problem activating workflow",
	"workflowActivator.showMessage.displayActivationError.message.catchBlock": "Sorry there was a problem requesting the error",
	"workflowActivator.showMessage.displayActivationError.message.errorDataNotUndefined": "The following error occurred on workflow activation:<br /><i>{message}</i>",
	"workflowActivator.showMessage.displayActivationError.message.errorDataUndefined": "Unknown error",
	"workflowActivator.showMessage.displayActivationError.title": "Problem activating workflow",
	"workflowActivator.theWorkflowIsSetToBeActiveBut": "The workflow is activated but could not be started.<br />Click to display error message.",
	"workflowActivator.thisWorkflowHasNoTriggerNodes": "This workflow has no trigger nodes that require activation",
	"workflowDetails.active": "Active",
	"workflowDetails.addTag": "Add tag",
	"workflowDetails.chooseOrCreateATag": "Choose or create a tag",
	"workflowDetails.showMessage.message": "Please enter a name, or press 'esc' to go back to the old one",
	"workflowDetails.showMessage.title": "Name missing",
	"workflowHelpers.showMessage.title": "Problem saving workflow",
	"workflowOpen.active": "Active",
	"workflowOpen.couldNotLoadActiveWorkflows": "Could not load active workflows",
	"workflowOpen.created": "Created",
	"workflowOpen.filterWorkflows": "Filter by tags",
	"workflowOpen.name": "@:_reusableBaseText.name",
	"workflowOpen.openWorkflow": "Open Workflow",
	"workflowOpen.searchWorkflows": "Search workflows...",
	"workflowOpen.showError.title": "Problem loading workflows",
	"workflowOpen.showMessage.message": "This is the current workflow",
	"workflowOpen.showMessage.title": "Workflow already open",
	"workflowOpen.updated": "Updated",
	"workflowOpen.newWFButton.label": "Add workflow",
	"workflowOpen.newWFButton.title": "Create a new workflow",
	"workflowPreview.showError.arrayEmpty": "Must have an array of nodes",
	"workflowPreview.showError.missingWorkflow": "Missing workflow",
	"workflowPreview.showError.previewError.message": "Unable to preview workflow",
	"workflowPreview.showError.previewError.title": "Preview error",
	"workflowRun.noActiveConnectionToTheServer": "Lost connection to the server",
	"workflowRun.showError.title": "Problem running workflow",
	"workflowRun.showMessage.message": "Please fix them before executing",
	"workflowRun.showMessage.title": "Workflow has issues",
	"workflowSettings.defaultTimezone": "Default - {defaultTimezoneValue}",
	"workflowSettings.defaultTimezoneNotValid": "Default Timezone not valid",
	"workflowSettings.errorWorkflow": "Error Workflow",
	"workflowSettings.helpTexts.errorWorkflow": "A second workflow to run if the current one fails.<br />The second workflow should an 'Error Trigger' node.",
	"workflowSettings.helpTexts.executionTimeout": "How long the workflow should wait before timing out",
	"workflowSettings.helpTexts.executionTimeoutToggle": "Whether to cancel workflow execution after a defined time",
	"workflowSettings.helpTexts.saveDataErrorExecution": "Whether to save data of executions that fail",
	"workflowSettings.helpTexts.saveDataSuccessExecution": "Whether to save data of executions that finish successfully",
	"workflowSettings.helpTexts.saveExecutionProgress": "Whether to save data after each node execution. This allows you to resume from where execution stopped if there is an error, but may increase latency.",
	"workflowSettings.helpTexts.saveManualExecutions": "Whether to save data of executions that are started manually from the editor",
	"workflowSettings.helpTexts.timezone": "The timezone in which the workflow should run. Used by 'cron' node, for example.",
	"workflowSettings.hours": "hours",
	"workflowSettings.minutes": "minutes",
	"workflowSettings.noWorkflow": "- No Workflow -",
	"workflowSettings.save": "@:_reusableBaseText.save",
	"workflowSettings.saveDataErrorExecution": "Save failed executions",
	"workflowSettings.saveDataErrorExecutionOptions.defaultSave": "Default - {defaultValue}",
	"workflowSettings.saveDataErrorExecutionOptions.doNotSave": "Do not save",
	"workflowSettings.saveDataErrorExecutionOptions.save": "@:_reusableBaseText.save",
	"workflowSettings.saveDataSuccessExecution": "Save successful executions",
	"workflowSettings.saveDataSuccessExecutionOptions.defaultSave": "Default - {defaultValue}",
	"workflowSettings.saveDataSuccessExecutionOptions.doNotSave": "Do not save",
	"workflowSettings.saveDataSuccessExecutionOptions.save": "@:_reusableBaseText.save",
	"workflowSettings.saveExecutionProgress": "Save execution progress",
	"workflowSettings.saveExecutionProgressOptions.defaultSave": "Default - {defaultValue}",
	"workflowSettings.saveExecutionProgressOptions.no": "No",
	"workflowSettings.saveExecutionProgressOptions.yes": "Yes",
	"workflowSettings.saveManualExecutions": "Save manual executions",
	"workflowSettings.saveManualOptions.defaultSave": "Default - {defaultValue}",
	"workflowSettings.saveManualOptions.no": "No",
	"workflowSettings.saveManualOptions.yes": "Yes",
	"workflowSettings.seconds": "seconds",
	"workflowSettings.selectOption": "Select Option",
	"workflowSettings.settingsFor": "Workflow settings for {workflowName} (#{workflowId})",
	"workflowSettings.showError.saveSettings1.errorMessage": "Timeout is activated but set to 0",
	"workflowSettings.showError.saveSettings1.message": "There was a problem saving the settings",
	"workflowSettings.showError.saveSettings1.title": "Problem saving settings",
	"workflowSettings.showError.saveSettings2.errorMessage": "Maximum Timeout is: {hours} hours, {minutes} minutes, {seconds} seconds",
	"workflowSettings.showError.saveSettings2.message": "The timeout is longer than allowed",
	"workflowSettings.showError.saveSettings2.title": "Problem saving settings",
	"workflowSettings.showError.saveSettings3.title": "Problem saving settings",
	"workflowSettings.showMessage.saveSettings.title": "Workflow settings saved",
	"workflowSettings.timeoutAfter": "Timeout After",
	"workflowSettings.timeoutWorkflow": "Timeout Workflow",
	"workflowSettings.timezone": "Timezone",
	"workflows.heading": "Workflows",
	"workflows.add": "Add Workflow",
	"workflows.menu.my": "My workflows",
	"workflows.menu.all": "All workflows",
	"workflows.item.open": "Open",
	"workflows.item.duplicate": "Duplicate",
	"workflows.item.delete": "Delete",
	"workflows.item.updated": "Last updated",
	"workflows.item.created": "Created",
	"workflows.item.owner": "Owner",
	"workflows.search.placeholder": "Search workflows...",
	"workflows.filters": "Filters",
	"workflows.filters.tags": "Tags",
	"workflows.filters.ownedBy": "Owned by",
	"workflows.filters.sharedWith": "Shared with",
	"workflows.filters.apply": "Apply filters",
	"workflows.filters.reset": "Reset all",
	"workflows.filters.active": "Some workflows may be hidden since filters are applied.",
	"workflows.filters.active.reset": "Remove filters",
	"workflows.sort.lastUpdated": "Sort by last updated",
	"workflows.sort.lastCreated": "Sort by last created",
	"workflows.sort.nameAsc": "Sort by name (A-Z)",
	"workflows.sort.nameDesc": "Sort by name (Z-A)",
	"workflows.noResults": "No workflows found",
	"workflows.noResults.withSearch.switchToShared.preamble": "some workflows may be",
	"workflows.noResults.withSearch.switchToShared.link": "hidden",
	"workflows.noResults.switchToShared.preamble": "but there are some",
	"workflows.noResults.switchToShared.link": "shared with you",
	"workflows.empty.heading": "👋 Welcome {name}!",
	"workflows.empty.heading.userNotSetup": "👋 Welcome!",
	"workflows.empty.description": "Create your first workflow",
	"workflows.empty.startFromScratch": "Start from scratch",
	"workflows.empty.browseTemplates": "Browse templates",
	"importCurlModal.title": "Import cURL command",
	"importCurlModal.input.label": "cURL Command",
	"importCurlModal.input.placeholder": "Paste the cURL command here",
	"ImportCurlModal.notice.content": "This will overwrite any changes you have already made",
	"importCurlModal.button.label": "Import",
	"importParameter.label": "Import cURL",
	"importParameter.showError.invalidCurlCommand.title": "Couldn’t import cURL command",
	"importParameter.showError.invalidCurlCommand.message": "This command is in an unsupported format",
	"importParameter.showError.invalidProtocol1.title": "Use the {node} node",
	"importParameter.showError.invalidProtocol2.title": "Invalid Protocol",
	"importParameter.showError.invalidProtocol.message": "The HTTP node doesn’t support {protocol} requests"
}
